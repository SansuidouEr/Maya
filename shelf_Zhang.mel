global proc shelf_Zhang () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 0
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "快速导出剪切板文件" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "export" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "导出" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "menuIconFile.png" 
        -image1 "menuIconFile.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $maCurrentMayaVersionMac = `about -mac`;\nif( $maCurrentMayaVersionMac == 1)\n{\n    sysFile -makeDir \"/Users/Shared/matemp\";\n    string $maCurrentMayaVersion = `about -product`;\n\tif(`gmatch $maCurrentMayaVersion \"*LT*\"`)\n    {\n        file -force -options \"v=0;\" -typ \"mayaLT\" -pr -es \"/Users/Shared/matemp/temp.mlt\";\n        print \"Exported selection to temp file Users\\\\Shared\\\\matemp\\\\temp.mlt\";\n\t}\n\t\t\n\telse\n\t{\n\t\tfile -force -options \"v=0;\" -typ \"mayaAscii\" -pr -es \"/Users/Shared/matemp/temp.ma\";\n        print \"Exported selection to temp file Users\\\\Shared\\\\matemp\\\\temp.ma\";\n\t}\n}\n\nelse\n{\n    sysFile -makeDir \"C:/matemp\";\n    string $maCurrentMayaVersion = `about -product`;\n\tif(`gmatch $maCurrentMayaVersion \"*LT*\"`)\n    {\n        file -force -options \"v=0;\" -typ \"mayaLT\" -pr -es \"C:/matemp/temp.mlt\";\n        print \"Exported selection to temp file c:\\\\matemp\\\\temp.mlt\";\n\t}\n\t\t\n\telse\n\t{\n\t\tfile -force -options \"v=0;\" -typ \"mayaAscii\" -pr -es \"C:/matemp/temp.ma\";\n        print \"Exported selection to temp file c:\\\\matemp\\\\temp.ma\";\n\t}\n}" 
        -sourceType "mel" 
        -commandRepeatable 0
        -flat 1
        -mi "快速导出OBJ文件" ( "{\n\t//Load .obj plugin\n\tint $loadedPlugInsObj = `pluginInfo -q -loaded \"objExport.mll\"`;\n\tif ($loadedPlugInsObj == 0)\n    {\n       \tloadPlugin \"objExport.mll\";\n\t\tpluginInfo -edit -autoload true \"objExport.mll\";\n\t}\n\t\n\t//Export to .obj MAC location\n\tstring $maCurrentMayaVersionMac = `about -mac`;\n\tif( $maCurrentMayaVersionMac == 1)\n\t{\n    \tsysFile -makeDir \"/Users/Shared/matemp\";\n\t\tfile -force -options \"groups=0;ptgroups=0;materials=0;smoothing=1;normals=1\" -typ \"OBJexport\" -pr -es \"/Users/Shared/matemp/temp.obj\";\n    \tprint \"Exported selection to temp file Users\\\\Shared\\\\matemp\\\\temp.obj\";\n\t}\n\n\t//Export to .obj PC location\n\telse\n\t{\n    \tsysFile -makeDir \"C:/matemp\";\n\t\tfile -force -options \"groups=0;ptgroups=0;materials=0;smoothing=1;normals=1\" -typ \"OBJexport\" -pr -es \"C:/matemp/temp.obj\";\n\n\t\tprint \"Exported selection to temp file c:\\\\matemp\\\\temp.obj\";\n\t}\n}" )
        -mi "快速打开导出目录" ( "{\n\tstring $maCurrentMayaVersionMac = `about -mac`;\n\tif($maCurrentMayaVersionMac == 1)\n\t{\n\t\tsysFile -makeDir \"/Users/Shared/matemp\";\n\t\tlaunch -directory \"/Users/Shared/matemp\";\n \t}\t\n\telse\n\t{\n\t\tsysFile -makeDir \"C:/matemp\";\n\t\tlaunch -directory \"C:/matemp\";\n\t}\t\n}" )
        -mi "帮助" ( "//帮助\n\nglobal proc m341_helpClose()\n{\n  global string $m341_close_HelpWindow;\n\n  if (`window -exists $m341_close_HelpWindow`)\n  {\n    global string $m341_close_HelpWindow;\n    deleteUI $m341_close_HelpWindow;\n  }\n  \n  $m341_close_HelpWindow = `window -title \"说明\" -leftEdge 900 -topEdge 115 -toolbox true -sizeable true -resizeToFitChildren false -width 350 -height 100`;\n    \n  paneLayout -configuration \"horizontal2\";\n  scrollField -text \"快速导出/导出选定网格到缓存目录，默认为.ma格式，可通过右键选项导出为.Obj格式\\nBy - 三岁豆\"\n  -wordWrap true\n  -enableBackground true\n  -backgroundColor 0.23 0.23 0.23;\n  \n  showWindow $m341_close_HelpWindow;\n}\nm341_helpClose();" )
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "快速导入剪切板文件" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "导入" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "menuIconFile.png" 
        -image1 "menuIconFile.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Import Temp .ma v1.1\n\nstring $maCurrentMayaVersionMac = `about -mac`;\nif( $maCurrentMayaVersionMac == 1)\n{    \n    string $maCurrentMayaVersion = `about -product`;\n\tif(`gmatch $maCurrentMayaVersion \"*LT*\"`)\n    {\n        file -import \"/Users/Shared/matemp/temp.mlt\";\n        print \"Imported temp.mlt into current scene\";\n\t}\n\t\t\n\telse\n\t{\n        file -import \"/Users/Shared/matemp/temp.ma\";\n        print \"Imported temp.ma into current scene\";\n\t}\n}\n\nelse\n{\n    string $maCurrentMayaVersion = `about -product`;\n\tif(`gmatch $maCurrentMayaVersion \"*LT*\"`)\n    {\n        file -import \"C:/matemp/temp.mlt\";\n        print \"Imported temp.mlt into current scene\";\n\t}\n\t\t\n\telse\n\t{\n        file -import \"C:/matemp/temp.ma\";\n        print \"Imported temp.ma into current scene\";\n\t}\n} " 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "快速导入OBJ文件" ( "{\n\t//Load .obj plugin\n\tint $loadedPlugInsObj = `pluginInfo -q -loaded \"objExport.mll\"`;\n\tif ($loadedPlugInsObj == 0)\n    {\n       \tloadPlugin \"objExport.mll\";\n\t\tpluginInfo -edit -autoload true \"objExport.mll\";\n\t}\n\t\n\t//Import to .obj MAC location\n\tstring $maCurrentMayaVersionMac = `about -mac`;\n\tif( $maCurrentMayaVersionMac == 1)\n\t{\n        file -import \"/Users/Shared/matemp/temp.obj\";\n        print \"Imported temp.obj into current scene\";\n\t}\n\n\t//Import to .obj PC location\n\telse\n\t{\n        file -import \"C:/matemp/temp.obj\";\n        print \"Imported temp.obj into current scene\";\n\t}\n}" )
        -mi "快速打开导入目录" ( "{\n\tstring $maCurrentMayaVersionMac = `about -mac`;\n\tif($maCurrentMayaVersionMac == 1)\n\t{\n\t\tsysFile -makeDir \"/Users/Shared/matemp\";\n\t\tlaunch -directory \"/Users/Shared/matemp\";\n \t}\t\n\telse\n\t{\n\t\tsysFile -makeDir \"C:/matemp\";\n\t\tlaunch -directory \"C:/matemp\";\n\t}\t\n}" )
        -mi "帮助" ( "//帮助\n\nglobal proc m341_helpClose()\n{\n  global string $m341_close_HelpWindow;\n\n  if (`window -exists $m341_close_HelpWindow`)\n  {\n    global string $m341_close_HelpWindow;\n    deleteUI $m341_close_HelpWindow;\n  }\n  \n  $m341_close_HelpWindow = `window -title \"说明\" -leftEdge 900 -topEdge 115 -toolbox true -sizeable true -resizeToFitChildren false -width 350 -height 100`;\n    \n  paneLayout -configuration \"horizontal2\";\n  scrollField -text \"快速导出/导出选定网格到缓存目录，默认为.ma格式，可通过右键选项导出为.Obj格式\\nBy - 三岁豆\"\n  -wordWrap true\n  -enableBackground true\n  -backgroundColor 0.23 0.23 0.23;\n  \n  showWindow $m341_close_HelpWindow;\n}\nm341_helpClose();" )
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "保存所有首选项" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "保存所有首选项" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "UVTkSaveValue.png" 
        -image1 "UVTkSaveValue.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//保存所有首选项v1.2\n{\n\t//Check if script editor already open\n\tglobal int $m341_scriptEditorOpen;\n\t$m341_scriptEditorOpen = 0;\n\tif (`window -exists scriptEditorPanel1Window`)\n\t{\n\t\tglobal int $m341_scriptEditorOpen;\n\t\t$m341_scriptEditorOpen = 1;\n\t}\n\n\t//Save current work space so it loads next time Maya starts\n\tworkspaceLayoutManager -save;\t\n\t\n\t//Open script editor to prevent losing script tabs\n\tScriptEditor;\n\n\t//Save script editor tabs to temp folder\n\tsyncExecuterBackupFiles();\n\n\t//Save all preferences\n\tSavePreferences;\n\n\t//Save all shelves\n\tglobal string $gShelfTopLevel;\n\tsaveAllShelves $gShelfTopLevel;\n\n\t//Save MTK shelf\n\tdRSaveShelves;\n\n\t//Save tool settings\n\tsaveToolSettings;\n\tsaveViewportSettings;\n\n\t//Save content browser settings\n\tsaveContentBrowserSettings;\n\n\t//Save plug-in prefs\n\tpluginInfo -savePluginPrefs;\n\n\t//Save menuset prefs\n\tmenuSetPref -saveAll;\n\n\t//Close script editor if it wasn't open to start\n\tif ($m341_scriptEditorOpen == 0)\n\t{\n\t\tdeleteUI scriptEditorPanel1Window;\t\n\t}\n\n\t//Save Window prefs\n\twindowPref -saveMainWindowState startupMainWindowState;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "快速退出并保存首选项" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Close_Maya" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "SP_MessageBoxCritical.png" 
        -image1 "SP_MessageBoxCritical.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "global proc m341_killMayaFast()\n{\n\t//Save current work space so it loads next time Maya starts\n\tworkspaceLayoutManager -save;\t\n\n\t//Open script editor to prevent losing script tabs\n\tScriptEditor;\n\n\t//Save script editor tabs to temp folder\n\tsyncExecuterBackupFiles();\n\n\t//Save all preferences\n\tSavePreferences;\n\n\t//Save all shelves\n\tglobal string $gShelfTopLevel;\n\tsaveAllShelves $gShelfTopLevel;\n\n\t//Save MTK shelf\n\tdRSaveShelves;\n\n\t//Save tool settings\n\tsaveToolSettings;\n\tsaveViewportSettings;\n\n\t//Save content browser settings\n\tsaveContentBrowserSettings;\n\n\t//Save plug-in prefs\n\tpluginInfo -savePluginPrefs;\n\n\t//Save menuset prefs\n\tmenuSetPref -saveAll;\n\n\t//Close script editor\t\n\tdeleteUI scriptEditorPanel1Window;\n\t\n\t//Save current work space so it loads next time Maya starts\n\tworkspaceLayoutManager -save;\t\n\n\t//Save Window prefs\n\twindowPref -saveMainWindowState startupMainWindowState;\n\n\t//Save scene if changed\n\t//saveChanges(\"\");\n\t\n\t//Close Maya\n\t//system(\"taskkill /IM maya.exe /f /t\");\n\t\n\t//Query application ID and use that to kill only the currently focused Maya\n\t$mayaInstanceID = `getpid`;\n\t//If Mac\n\tstring $maCurrentMayaVersionMac = `about -mac`;\n\tif( $maCurrentMayaVersionMac == 1)\n\t{\n\t\tsystem(\"kill -9 \"  + $mayaInstanceID);\n\t}\n\n\telse\n\t{\n\t\tsystem(\"taskkill /PID \"  + $mayaInstanceID +\" /f /t\");\t\n\t}\n}\n\n//Check which version of Maya is running\nstring $findMayaYear2020 = `about -product`;\nstring $findMayaYear2019 = `about -product`;\nstring $findMayaYear2018 = `about -product`;\nstring $findMayaYear2017 = `about -product`;\nint $mayaYear2020 = `gmatch $findMayaYear2020 \"*2020*\"`;\nint $mayaYear2019 = `gmatch $findMayaYear2019 \"*2019*\"`;\nint $mayaYear2018 = `gmatch $findMayaYear2018 \"*2018*\"`;\nint $mayaYear2017 = `gmatch $findMayaYear2017 \"*2017*\"`;\n\n//Use fast close for older versions of Maya\nif ($mayaYear2020 == 1 || $mayaYear2019 == 1 || $mayaYear2018 == 1 || $mayaYear2017 == 1)\n{\n\t//Check if scene was modified\n\tint $checkFileDirty = `file -q -modified`;\n\tif ($checkFileDirty == 0)\n\t{\n\t\tm341_killMayaFast();\t\t\n\t}\n\n\telse if ($checkFileDirty == 1)\n\t{\n\t\t//If user cancels don't kill Maya\n\t\tif(!saveChanges(\"\"))\n\t\t{\n\t\t\tprint \"Canceled fast close\";\n\t\t}\n\t\n\t\telse\n\t\t{\n\t\t\tm341_killMayaFast();\n\t\t}\n\t}\n}\n\nelse\n{\n\t//Use regular close for newer versions of Maya\n\tQuit;\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "选择循环线  可选择一侧的面" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Circle Line" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyConvertToEdgeLoop.png" 
        -image1 "polyConvertToEdgeLoop.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "global proc m341_selectHalfMesh()\n{\n\tstring $edges[] = `ls -sl -fl`;\n\tint $sizeEdges = `size $edges`;\n\t\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\tstring $mesh[] = `ls -sl`;\n\t\n\t//Store current UV set name\n\tstring $uvSet[] = `polyUVSet -q -currentUVSet`;\n\t\n\t\n\tpolyCopyUV -uvSetNameInput \"map1\" -uvSetName \"m341_tempUVsDelete\" -createNewMap 1 -ch 1;\n\tConvertSelectionToFaces;\n\tpolyProjection -ch 1 -type Planar -ibd on -kir  -md z;\n\n\t//Cut UV edges\n\tselect $edges;\n\tpolyMapCut -ch 1;\n\n\t//Get faces\n\tConvertSelectionToUVs;\n\tInvertSelection;\n\tstring $UVs[] = `ls -sl -fl`;\n\tselect $UVs[0]; \n\tConvertSelectionToUVShell;\n\tConvertSelectionToFaces;\n\tstring $faces[] = `ls -sl`;\n\n\t//Clean up temp UV set\n\tDeleteCurrentUVSet;\n\t//Switch back to previous UV set from above\n\tpolyUVSet -currentUVSet -uvSet $uvSet[0];\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\tDeleteHistory;\n\n\t//Select half\n\tselect $faces;\n\tselect -add $mesh;\n\tSelectMultiComponentMask;\n}\nm341_selectHalfMesh();" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "X射线显示" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "X射线显示" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Xray" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "menuIconConnect.png" 
        -image1 "menuIconConnect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//X射线选定对象v1.0\n\nglobal proc m341_XRaySelected()\n{\n\tstring $xrayObjs[] = `ls -sl`;\n\tint $sizeXrayObjs = `size $xrayObjs`;\n\tif ($sizeXrayObjs == 0)\n\t{\n\t\tstring $allMeshes[] = `ls -exactType mesh`;\n\t\tstring $allNurbs[] = `ls -exactType nurbsSurface`;\n\t\tselect $allMeshes;\n\t\tselect -add $allNurbs;\n\n\t\tglobal int $m341_xRayToggle;\n\t\t$m341_xRayToggle = !$m341_xRayToggle;\n\t    if ($m341_xRayToggle == 1)\n\t\t{\n\t\t\tdisplaySurface -xRay 1;\n\t\t\tselect -clear;\n\t\t\tprint \"All objects XRay on\";\t\t\t\n    \t}\n\n\t    else if ($m341_xRayToggle == 0)\n    \t{\n\t\t\tdisplaySurface -xRay 0;\n\t\t\tselect -clear;\n\t\t\tprint \"All objects XRay off\";\t\t\t\n\t    }\n\t}\n\telse\n\t{\n\t\tfor ($item in $xrayObjs)\n\t\t{\n\t\t\tselect $item;\n\t\t\tint $queryXRay[] = `displaySurface -q -xRay`;\n\t\t\tif ($queryXRay[0] == 0)\n\t\t\t{\n\t\t\t\tdisplaySurface -xRay 1;\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdisplaySurface -xRay 0;\t\t\n\t\t\t}\n\t\t}\n\t\tselect $xrayObjs;\n\t\tprint \"Selected objects XRay on/off\";\t\t\n\t}\n}\nm341_XRaySelected();" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "删除空组" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "删除空组" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "deleteActive.png" 
        -image1 "deleteActive.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// 弹出确认对话框\nstring $confirm = `confirmDialog -title \"确认\" -message \"你确定要清空Maya大纲视图中的空组吗？\" -button \"是\" -button \"否\" -defaultButton \"是\" -cancelButton \"否\" -dismissString \"否\"`;\n\n// 检查用户的选择\nif ($confirm == \"是\") {\n    BakeAllNonDefHistory;\n    source cleanUpScene;\n    deleteEmptyGroups;\n    deleteUnusedSets;\n\n    {\n        string $allXforms[] = `ls -exactType mesh`;\n        select $allXforms;\n        \n        for ($itemXF in $allXforms)\n        {\n            if (`gmatch $itemXF \"*Orig\"`)\n            {\n                select -deselect \"*Orig\";\n            }\n        }\n        $allXforms = `ls -sl`;\n\n\n        //设置循环\n        string $Objs[] = `ls -sl`;\n        int $ObjsSize = `size $Objs`;\n        int $Counter = 0;\n\n\n        for ($ItemDEG1 = 0; $ItemDEG1 < $ObjsSize; ++$ItemDEG1)\n        {\n            select $Objs[$Counter];\n            //如果没有子对象，删除它.\n            ConvertSelectionToVertices;\n            string $checkIfVerts[] = `filterExpand -sm 31`;\n            int $checkIfVertsSize = `size $checkIfVerts`;\n            if ($checkIfVertsSize == 0)\n            {\n                    delete;\n            }   \n            $Counter = $Counter + 1;\n        }\n        //删除空组Maya方式\n        source cleanUpScene;\n        deleteEmptyGroups;\n    }\n\n\n    {\n        //选择所有没有子级的变换并将其删除\n        SelectAllCameras;\n        string $allCamera[] = `ls -sl`;\n        string $allXforms[] = `ls -exactType transform`;\n        select $allXforms;\n        select -deselect $allCamera;\n\n\n        //设置循环\n        string $Objs[] = `ls -sl`;\n        int $ObjsSize = `size $Objs`;\n        int $Counter = 0;\n\n\n        for ($ItemDEG2 = 0; $ItemDEG2 < $ObjsSize; ++$ItemDEG2)\n        {\n            select $Objs[$Counter];\n            string $checkForChildren[] = `listRelatives`;\n            int $checkForChildrenSize = `size $checkForChildren`;\n            if ($checkForChildrenSize == 0)\n            {\n                delete;\n            }\n            $Counter = $Counter + 1;\n        }\n        source cleanUpScene;\n        deleteEmptyGroups;\n    }\n\n    SelectNone;\n    print \"已删除空组\";\n} else {\n    // 用户选择了\"否\"，不执行任何操作\n    print \"操作已取消\";\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "清理场景未知节点插件" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "清理场景未知节点插件" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyCleanup.png" 
        -image1 "polyCleanup.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "string $unknownNodes[] = `ls -type \"unknown\"`;\nfor($node in $unknownNodes) {\nprint( \"Deleting \" + $node + \"\\n\" );\nlockNode -lock 0 $node;\ndelete $node;}\n\nstring $plugin;\nstring $unknownPlugins[] = `unknownPlugin -query -list`;\nfor ($plugin in $unknownPlugins)\n{unknownPlugin -remove $plugin;}\nprint (\"三岁豆Er: 清理未知节点插件成功！\" + \"\\n\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "在物体上创建组件" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "在物体上创建组件" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyAssignSubdivHole.png" 
        -image1 "polyAssignSubdivHole.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "global string $m341_cPASVersion;\nglobal proc m341_cPAS_help()\n{\n\tglobal string $m341_cPAS_helpWindow;\n\n\tif (`window -exists $m341_cPAS_helpWindow`)\n\t{\n\t\tglobal string $m341_cPAS_helpWindow;\n\t\tdeleteUI $m341_cPAS_helpWindow;\n\t}\n\t\n\t$m341_cPAS_helpWindow = `window -title \"Help\" -leftEdge 900 -topEdge 115 -toolbox true -sizeable false -resizeToFitChildren false -width 400 -height 300`;\n\t\t\n\tpaneLayout -configuration \"horizontal2\";\n\tscrollField -text \"选择点 线 面  单击对应命令，即可以选中位置为中心创建对应物体。\\nBy - 三岁豆\"\n\t-wordWrap true\n\t-enableBackground true\n\t-backgroundColor 0.23 0.23 0.23;\n\t\n\tshowWindow $m341_cPAS_helpWindow;\n}\n\n\nglobal proc m341_cPAS_Scale_ValueChanged()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\t$m341_cPAS_Scale_userInput = `floatField -query -value cPAS_Scale_FloatFieldName`;\n\toptionVar -floatValue \"m341_cPAS_ScaleFloatField_VarName\" $m341_cPAS_Scale_userInput;\n\tprint(\"cPAS Scale set to \" + $m341_cPAS_Scale_userInput + \"\\n\");\n}\n\n\nproc cPAS_Cube()\n{\n\tpolyCube -w 1 -h 1 -d 1 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1;   \n}\n\nproc cPAS_Plane()\n{\n\tpolyPlane -w 1 -h 1 -sx 1 -sy 1 -ax 0 1 0 -cuv 2 -ch 1;\n}\n\n\nproc cPAS_Sphere()\n{\n\tpolySphere -r 0.5 -sx 16 -sy 16 -ax 0 1 0 -cuv 2 -ch 1;\n}\n\n\nproc cPAS_Cylinder()\n{\n\tpolyCylinder -r 0.5 -h 1 -sx 16 -sy 1 -sz 0 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;\n}\n\nproc cPAS_Pipe()\n{\n\tpolyPipe -r 0.5 -h 2 -t 0.25 -sa 16 -sh 1 -sc 0 -ax 0 1 0 -cuv 1 -rcp 0 -ch 1;\n}\n\nproc cPAS_Helix()\n{\n\tpolyHelix -c 2 -h 1 -w 1 -r 0.1 -sa 16 -sco 16 -sc 0 -d 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;\n}\n\nproc cPAS_Platonic()\n{\n\tCreatePolygonPlatonic;\n\tstring $objName[] = `ls -sl`;\n\tstring $historyNode[] = `listHistory $objName`;\n\tsetAttr ($historyNode[1] + \".primitive\") 1;\n\tsetAttr ($historyNode[1] + \".subdivisions\") 2;\n\tsetAttr ($historyNode[1] + \".radius\") 0.5;\n\t\n\tselect $historyNode[1];\n\tselect -add $objName;\n}\n\nproc cPAS_Torus()\n{\n\tpolyTorus -r 0.375 -sr 0.125 -tw 0 -sx 16 -sy 16 -ax 0 1 0 -cuv 1 -ch 1;\n}\n\nproc cPAS_Cone()\n{\n\tpolyCone -r 0.5 -h 1 -sx 16 -sy 1 -sz 0 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;\n}\n\nproc cPAS_Locator()\n{\n\tspaceLocator -p 0 0 0;\n}\n\nproc cPAS_Group()\n{\n\tgroup -empty;\n}\n\nglobal proc m341_cPAS_CreateCube()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"CUBE\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Cube();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cube();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cube();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Cube();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\n\nglobal proc m341_cPAS_CreatePlane()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\n\tstring $primitiveName = \"PLANE\";\n\t\n\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\n\tmanipPivot -rp;\n\t\n\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n\n    \tcPAS_Plane();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Plane();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Plane();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Plane();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreateSphere()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"SPHERE\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Sphere();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Sphere();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Sphere();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Sphere();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreateCylinder()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"CYLINDER\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Cylinder();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cylinder();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cylinder();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Cylinder();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreatePipe()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"PIPE\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Pipe();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Pipe();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Pipe();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Pipe();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreateHelix()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"HELIX\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Helix();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Helix();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Helix();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Helix();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreatePlatonic()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"PLATONIC\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Platonic();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Platonic();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Platonic();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Platonic();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreateTorus()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"TORUS\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Torus();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Torus();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Torus();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Torus();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nglobal proc m341_cPAS_CreateCone()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"CONE\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Cone();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cone();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Cone();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Cone();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\n\n\n\n\n\nglobal proc m341_cPAS_CreateLocator()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\tstring $primitiveName = \"LOCATOR\";\n\t\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\tmanipPivot -rp;\n\t\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n    \tcPAS_Locator();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Locator();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\tif ($sizeLocatorSelected > 0)\n\t{\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\t    cPAS_Locator();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Locator();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeFacesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\tif ($sizeEdgesSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\tif ($sizeVertsSelected == 1)\n    {\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\n\nglobal proc m341_cPAS_CreateGroup()\n{\n\tglobal float $m341_cPAS_Scale_userInput;\n\tm341_cPAS_Scale_ValueChanged();\n\t\n\n\tglobal float $m341_cPAS_Scale_userInput;\n\tfloat $primitiveScale = $m341_cPAS_Scale_userInput;\n\n\n\tstring $primitiveName = \"GROUP\";\n\t\n\n\tfloat $rotateX = 0;\n\tfloat $rotateY = 0;\n\tfloat $rotateZ = -90;\n\n\n\tmanipPivot -rp;\n\t\n\n\n\tstring $mayaUnits = `currentUnit -q`;\n\tcurrentUnit -linear \"cm\";\t\n\n\n\tstring $curveSelected[] = `filterExpand -expand true -sm 9`;\n\tint $sizeCurveSelected = size($curveSelected);\n\n\tstring $nurbSelected[] = `filterExpand -expand true -sm 10`;\n\tint $sizeNurbSelected = size($nurbSelected);\n\t\n\tstring $cvsSelected[] = `filterExpand -expand true -sm 28`;\n\tint $sizeCVsSelected = size($cvsSelected);\n\t\n   \tstring $objectsSelected[] = `filterExpand -expand true -sm 12`;\n\tint $sizeObjectsSelected = size($objectsSelected);\n\t\n\tstring $locatorSelected[] = `filterExpand -expand true -sm 22`;\n\tint $sizeLocatorSelected = size($locatorSelected);\n\t\n\tstring $nothingSelected[] = `ls -sl`;\n\tint $sizeNothingSelected = size($nothingSelected);\n\t\n\tstring $facesSelected[] = `filterExpand -expand true -sm 34`;\n\tint $sizeFacesSelected = size($facesSelected);\n\n   \tstring $edgesSelected[] = `filterExpand -expand true -sm 32`;\n\tint $sizeEdgesSelected = size($edgesSelected);\n   \t\n\tstring $vertsSelected[] = `filterExpand -expand true -sm 31`;\n\tint $sizeVertsSelected = size($vertsSelected);\n   \t\n\n\tstring $component[] = `ls -sl`;\n\ttoggleSelMode;\n\ttoggleSelMode;\n\tselectMode -object;\n\t\n\tstring $object[] = `ls -sl`;\n\tselect $component;\n\n\n\tMoveTool;\n\tmanipMoveContext -edit -mode 10 Move;\n\t\n\n\tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t\n\n\tfloat $locatorTargetAngle[] = `manipMoveContext -q -orientAxes \"Move\"`;\n\t$locatorTargetAngle[0] = rad_to_deg($locatorTargetAngle[0]);\n\t$locatorTargetAngle[1] = rad_to_deg($locatorTargetAngle[1]);\n\t$locatorTargetAngle[2] = rad_to_deg($locatorTargetAngle[2]);\n\t\n\n\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0 || $sizeCVsSelected > 0)\n\t{\n\n       \tint $MPTS_Item;\n   \t    float $vert_location[3];\n        float $center_location[3];\n   \t    string $selected[] = `ls -sl`;\n\t\t\n\n\t\tif ($sizeFacesSelected > 0 || $sizeEdgesSelected > 0 || $sizeVertsSelected > 0)\n\t\t{\n\t\t\tConvertSelectionToVertices;\t\t\n\t\t}\n\n   \t    string $selected_Verts[] = `ls -sl -fl`;\n        int $selected_Verts_size = `size $selected_Verts`;\n        string $shapeNode[] = `ls -sl -objectsOnly`;\n        string $objectNode[] = `listRelatives -parent $shapeNode[0]`;\n        select $objectNode;\n\n       \tfor ($MPTS_Item = 0; $MPTS_Item < $selected_Verts_size; $MPTS_Item++)\n   \t    {\n    \t    $vert_location = `pointPosition -world $selected_Verts[$MPTS_Item]`;\n        \t$center_location[0] += $vert_location[0];\n       \t\t$center_location[1] += $vert_location[1];\n\t        $center_location[2] += $vert_location[2];\n        }\n       \t$center_location[0] /= $selected_Verts_size;\n        $center_location[1] /= $selected_Verts_size;\n       \t$center_location[2] /= $selected_Verts_size;\t    \t    \n\t    \n\n    \tcPAS_Group();\n        xform -worldSpace -t $center_location[0] $center_location[1] $center_location[2];\n    \txform -s $primitiveScale $primitiveScale $primitiveScale;\n        xform -rotation $locatorTargetAngle[0] $locatorTargetAngle[1] $locatorTargetAngle[2];\n\n\t    rotate -r -os -fo $rotateX $rotateY $rotateZ;\n\n       \ttoggleSelMode;\n\t    toggleSelMode;\n    \tselectMode -object;\n\n    \tmanipMoveContext -edit -mode 0 Move;\n\t}\n\n\n\tif ($sizeObjectsSelected > 0 || $sizeCurveSelected > 0 || $sizeNurbSelected > 0)\n\t{\n\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\n\t    cPAS_Group();\n\t\txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n\n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Object selected \" + $primitiveName + \" aligned to object rotation\");\n\t}\n\t\n\n\tif ($sizeLocatorSelected > 0)\n\t{\n\n    \tMoveTool;\n\t   \tfloat $locatorTargetPOS[] = `manipMoveContext -q -position \"Move\"`;\n\t  \tfloat $locatorTargetROT[] = `xform -q -rotation`;\n\n\t    cPAS_Group();\n    \txform -ws -t $locatorTargetPOS[0] $locatorTargetPOS[1] $locatorTargetPOS[2];\n    \txform -rotation $locatorTargetROT[0] $locatorTargetROT[1] $locatorTargetROT[2];\n\t\txform -s $primitiveScale $primitiveScale $primitiveScale;\n \n\t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Locator selected \" + $primitiveName + \" aligned to locator rotation\");\n\t}\n\n\n\tif ($sizeNothingSelected == 0)\n\t{\n    \tcPAS_Group();\n\t    xform -s $primitiveScale $primitiveScale $primitiveScale;\n   \t\ttoggleSelMode;\n\t\ttoggleSelMode;\n\t\tselectMode -object;\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Nothing selected \" + $primitiveName + \" aligned to world\");\n\t}\n\n\n\tif ($sizeFacesSelected == 1)\n\t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single face selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n\n   \tif ($sizeFacesSelected > 1)\n   \t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi face selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n    \n\n\tif ($sizeEdgesSelected == 1)\n    {\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single edge selected \" + $primitiveName + \" aligned to normal\");\n    }\n    \n\n   \tif ($sizeEdgesSelected > 1)\n   \t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi edge selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n      \n\n\tif ($sizeVertsSelected == 1)\n    {\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Single vert selected \" + $primitiveName + \" aligned to normal\");\n\t}\n\t\n\n   \tif ($sizeVertsSelected > 1)\n   \t{\n\n\t\tcurrentUnit -linear $mayaUnits;\n\t\tprint (\"Multi vert selected \" + $primitiveName + \" aligned to average normal\");\n   \t}\n}\n\n\nif (`window -exists m341_cPAS_UI`)\n{\n\tdeleteUI m341_cPAS_UI;\n};\n\nwindow -title $m341_cPASVersion -toolbox true -sizeable true -resizeToFitChildren true m341_cPAS_UI;\ncolumnLayout -adjustableColumn true;\ntext -label \"  \" -font \"smallPlainLabelFont\" -width 100;\n\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-label \"帮助\"\n\t\t-backgroundColor 0.51 0.51 0.51\n\t\t-width 100\n\t\t-height 30\n\t\t-command \"m341_cPAS_help;\";\n\n\tfloat $Scale_floatFieldValue;\n\tglobal float $m341_cPAS_Scale_userInput;\n\tstring $Scale_OptionVar = `optionVar -exists \"m341_cPAS_ScaleFloatField_VarName\"`;\n\tif ($Scale_OptionVar == 0)\n\t{\n\n\t\toptionVar -floatValue \"m341_cPAS_ScaleFloatField_VarName\" 10.0;\n\t\t$Scale_floatFieldValue = `optionVar -q \"m341_cPAS_ScaleFloatField_VarName\"`;\n\t}\n\telse\n\t{\n\n\t\t$Scale_floatFieldValue = `optionVar -q \"m341_cPAS_ScaleFloatField_VarName\"`;\n\t}\n\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ttext -label \"\" -height 1 -font \"smallPlainLabelFont\";\n\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\tfloatField -value $Scale_floatFieldValue -pre 1 -width 100 -height 20 -changeCommand \"m341_cPAS_Scale_ValueChanged();\" cPAS_Scale_FloatFieldName;\n\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.772 0.521 0.302\n\t\t-width 100\n\t\t-label \"立方体\"\n\t\t-command \"m341_cPAS_CreateCube;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.441 0.529 0.78\n\t\t-width 100\n\t\t-label \"面片\"\n\t\t-command \"m341_cPAS_CreatePlane;\"\n\t\t-commandRepeatable 1;\n\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.34 0.59 0.47\n\t\t-width 100\n\t\t-label \"球体\"\n\t\t-command \"m341_cPAS_CreateSphere;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.32 0.59 0.72\n\t\t-width 100\n\t\t-label \"圆柱\"\n\t\t-command \"m341_cPAS_CreateCylinder;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.50 0.67 0.37\n\t\t-width 100\n\t\t-label \"圆管\"\n\t\t-command \"m341_cPAS_CreatePipe;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.72 0.68 0.39\n\t\t-width 100\n\t\t-label \"螺旋\"\n\t\t-command \"m341_cPAS_CreateHelix;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.70 0.39 0.34\n\t\t-width 100\n\t\t-label \"球\"\n\t\t-command \"m341_cPAS_CreatePlatonic;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.427 0.643 0.643\n\t\t-width 100\n\t\t-label \"圆环\"\n\t\t-command \"m341_cPAS_CreateTorus;\"\n\t\t-commandRepeatable 1;\n\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.32 0.59 0.72\n\t\t-width 100\n\t\t-label \"圆锥\"\n\t\t-command \"m341_cPAS_CreateCone;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.596 0.529 0.769\n\t\t-width 100\n\t\t-label \"定位器\"\n\t\t-command \"m341_cPAS_CreateLocator;\"\n\t\t-commandRepeatable 1;\n\t\t\n\tsetParent ..;\n\trowColumnLayout -numberOfRows 1;\n\ticonTextButton -style \"textOnly\"\n\t\t-backgroundColor 0.51 0.51 0.51\n\t\t-width 100\n\t\t-label \"组\"\n\t\t-command \"m341_cPAS_CreateGroup;\"\n\t\t-commandRepeatable 1;\n\t\nshowWindow;\nprint \"cPAS toolbox loaded\";" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "批量传递UV工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "批量传递UV工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0 
        -image "uvChooser.svg" 
        -image1 "uvChooser.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "////////////批量传递UV工具/////////////\n\nglobal proc callUvOneToN() {\n  \n  string $objSel[] = `ls -sl`;\n  \n  int $numSel = size($objSel);\n  \n  if ($numSel <= 1) {\n    confirmDialog -title \"Message\" -message \"至少选择两个物体\" -button \"OK\" -defaultButton \"OK\";\n    return;\n  }\n  \n  string $source = $objSel[$numSel-1];\n  \n  string $str = \"\";\n  \n  int $i;\n    \n  for ($i=0; $i<$numSel-1; $i++) {\n    polyTransfer -vc 0 -uv 1 -v 0-ao $source $objSel[$i];\n  }\n}\n\n\nif(`window -ex FY_tool_3UV`) deleteUI FY_tool_3UV; \n\n\nwindow -title \"批量传递UV工具\" -sizeable 0 -tlb 0 FY_tool_3UV;\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 300;\ntext -h 30 -l \"\";\ntext -fn \"boldLabelFont\" -l \"选择所有物体，UV将会以最后选择的物体为准\";\ntext -h 30-l \"\";\nbutton -l \"传递\" -h 30 -bgc 0.45 0.55 0.27 -c \"callUvOneToN()\";\ntext -h 20 -l \"\";\nsetParent ..;   \nshowWindow FY_tool_3UV;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "指定贴图位置工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "指定贴图位置工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "file.svg" 
        -image1 "file.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//工具名称：FileTextureManager(文件纹理管理器)\n// 汉化：三岁豆\n\n//定义选择程序\n\nproc int FTM_SelCheck(string $nodes[]){\nint $sel = 0;\nif (size($nodes))\n\t$sel = 1;\nelse\n\tconfirmDialog -t \"File Texture Manager\" -m \"必须至少选择一个文件纹理节点！\" -b \"OK\";\nreturn $sel;\n}\n\n\n// 提醒用户作业已完成的进度。\n\nproc FTM_END(){\n\t\tconfirmDialog -t \"File Texture Manager\" -m \"操作已完成。\\n作业已完成。\" -ma center -b \"OK\";\n}\n\n\n//日志\n\nproc FTM_Log (string $type, string $node, string $log) {\nstring $finLog;\nif (size($node))\n\t$log = $node + \"\\n\";\nelse\n\t$log = \"\\t\" + $log + \"\\n\";\nswitch ($type) {\n\tcase \"start\":\n\t\t$finLog = \"\\n***************************************************************************************************************\\n\\\nFile Texture 管理器日志启动\\n\\\n***************************************************************************************************************\\n\";\n\tbreak;\n\tcase \"end\":\n\t\t$finLog = \"***************************************************************************************************************\\n\\\nFile Texture 管理器日志结束\\n\\\n***************************************************************************************************************\\n\";\n\tbreak;\n\tdefault:\n\t\t$finLog = $log;\n\tbreak;\n}\nprint $finLog;\n}\n\n\n// 获取正确的路径(文件夹)格式以匹配当前操作系统。\n\nproc string FTM_GetPath (string $FTM_FileOrPath, string $FTM_OldPath)\n{\n\t$FTM_OldPath = `substituteAll \"\\\\\\\\\" $FTM_OldPath \"/\"`;\n\tif ($FTM_FileOrPath == \"file\")\n\t\t$FTM_OldPath = `dirname $FTM_OldPath`;\n\t$FTM_OldPath = `substitute \"/*$\" $FTM_OldPath \"\"`;\n\tstring $FTM_RightPath;\n\tif (size($FTM_OldPath)) $FTM_RightPath = `toNativePath ($FTM_OldPath + \"/\")`;\n\treturn $FTM_RightPath;\n}\n\n\n\n//获取与当前操作系统匹配的输入文件全名(包括路径)的正确格式。\n//返回一个字符串数组,第一个元素是输入文件的正确格式\n//全名(包括路径),第二个元素是输入文件的短名称(没有路径)。\n\nproc string[] FTM_GetFile (string $FTM_OldFullPath)\n{\n\tstring $FTM_RightPath[];\n\tstring $FTM_PathElements[];\n\tint $FTM_PathElementsSize;\n\t// fullname\n\t$FTM_OldFullPath = `substituteAll \"\\\\\\\\\" $FTM_OldFullPath \"/\"`;\n\t$FTM_RightPath[0] = `toNativePath $FTM_OldFullPath`;\n\t$FTM_PathElementsSize = `tokenize $FTM_OldFullPath \"/\" $FTM_PathElements`;\n\t$FTM_RightPath[1] = $FTM_PathElements[$FTM_PathElementsSize - 1];\n\treturn $FTM_RightPath;\n}\n\n\n//分析当前场景中的所有文件纹理节点。\n//\nproc string[] FTM_FileTextureAnalyst ()\n{\n\tglobal string $lsCmd;\n\tstring $FTM_Files[] = eval($lsCmd);\n\n\t// Different groups.\n\tstring $FTM_Groups[];\n\tint $FTM_GroupsSize;\n\tif (size($FTM_Files)){\n\t\t$FTM_Groups[0] = \"FTM_EmptySocket_FTM\";\n\t\t$FTM_Groups[1] = \"FTM_MissingPathSocket_FTM\";\n\t}\n\n\tfor ($eachFile in $FTM_Files)\n\t{\n\t\t$FTM_GroupsSize = size($FTM_Groups);\n\t\tstring $FTM_CurrentFullPath = substituteAll (\"\\\\\\\\\", `getAttr ($eachFile + \".fileTextureName\")`, \"/\");\n\t\tstring $FTM_CurrentPath = dirname ($FTM_CurrentFullPath);\n\n\t\tif (size($FTM_CurrentPath))\n\t\t{\n\t\t\tfor ($j=2; $j<$FTM_GroupsSize; $j++)\n\t\t\t{\n\t\t\t\tstring $buffer[];\n\t\t\t\ttokenize $FTM_Groups[$j] \"*\" $buffer;\n\t\t\t\tstring $FTM_OldPath =  $buffer[0];\n\t\t\t\tstring $cmp1 = $FTM_CurrentPath;\n\t\t\t\tstring $cmp2 = $FTM_OldPath;\n\t\t\t\tif (`about -nt`) {\n\t\t\t\t\t$cmp1 = tolower($FTM_CurrentPath);\n\t\t\t\t\t$cmp2 = tolower($FTM_OldPath);\n\t\t\t\t}\n\n\t\t\t\tif ($cmp1 == $cmp2)\n\t\t\t\t{\n\t\t\t\t\tstring $tmp = $FTM_Groups[$j];\n\t\t\t\t\t$tmp += \"*\" + $eachFile;\n\t\t\t\t\t$FTM_Groups[$j] = $tmp;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($j >= $FTM_GroupsSize)\n\t\t\t{\n\t\t\t\t$FTM_Groups[$FTM_GroupsSize] = $FTM_CurrentPath + \"*\" + $eachFile;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\telse if (size($FTM_CurrentFullPath)){\n\t\t\tstring $tmp = $FTM_Groups[1];\n\t\t\t$tmp += \"*\" + $eachFile;\n\t\t\t$FTM_Groups[1] = $tmp;\n\t\t}\n\t\telse{\n\t\t\tstring $tmp = $FTM_Groups[0];\n\t\t\t$tmp += \"*\" + $eachFile;\n\t\t\t$FTM_Groups[0] = $tmp;\n\t\t}\n\t}\n\n\tselect -cl;\n\treturn $FTM_Groups;\n}\n\n\n//生成UI控件\n\nproc FTM_EditUIControl (string $FTM_OptionColumn, string $FTM_HelpForm)\n{\n// Operation mode\n\tradioButtonGrp -e -on1 (\"textFieldButtonGrp -e -en 0 -tx \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_SourceDirectoryField\")\n\t\t\t-on2 (\"textFieldButtonGrp -e -en 1 -tx \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_SourceDirectoryField\")\n\t\t\t($FTM_OptionColumn + \"|FTM_OperationMode\");\n// Set source directory\n\ttextFieldButtonGrp -e -bc (\"FTM_BrowseCmd \\\"file\\\" \\\"\" + $FTM_OptionColumn + \"|FTM_SourceDirectoryField\\\" \\\"Set_S.D.\\\" 0\")\n\t\t\t($FTM_OptionColumn + \"|FTM_SourceDirectoryField\");\n// Set target directory\n\ttextFieldButtonGrp -e -bc (\"FTM_BrowseCmd \\\"path\\\" \\\"\" + $FTM_OptionColumn + \"|FTM_TargetDirectoryField\\\" \\\"Set_T.D.\\\" 4\")\n\t\t\t($FTM_OptionColumn + \"|FTM_TargetDirectoryField\");\n// Make new folder\n\tcheckBoxGrp -e -on1 (\"textFieldGrp -e -en 1 -text \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_NewFolderNameField\")\n\t\t\t-of1 (\"textFieldGrp -e -en 0 -text \\\"MyTextureFiles\\\" \" + $FTM_OptionColumn + \"|FTM_NewFolderNameField\")\n\t\t\t($FTM_OptionColumn + \"|FTM_MakeFolderChecker\");\n// Add prefix\n\tcheckBox -e -onc (\"textField -e -en 1 -text \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_PrefixField\")\n\t\t\t-ofc (\"textField -e -en 0 -text \\\"prefix_\\\" \" + $FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_PrefixField\")\n\t\t\t($FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_AddPrefixChecker\");\n// Add suffix\n\tcheckBox -e -onc (\"textField -e -en 1 -text \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_SuffixField\")\n\t\t\t-ofc (\"textField -e -en 0 -text \\\"_suffix\\\" \" + $FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_SuffixField\")\n\t\t\t($FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_AddSuffixChecker\");\n// Replace string\n\tcheckBoxGrp -e -on1 (\"textFieldGrp -e -en 1 -text \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_OldStringField; textFieldGrp -e -en 1 -text \\\"\\\" \" + $FTM_OptionColumn + \"|FTM_NewStringField\")\n\t\t\t-of1 (\"textFieldGrp -e -en 0 -text \\\"OldString\\\" \" + $FTM_OptionColumn + \"|FTM_OldStringField; textFieldGrp -e -en 0 -text \\\"NewString\\\" \" + $FTM_OptionColumn + \"|FTM_NewStringField\")\n\t\t\t($FTM_OptionColumn + \"|FTM_ReplaceStringChecker\");\n\n//帮助描述字段\n\tstring $FTM_HelpDescription = \"\\n 说 明:\\n\\n\";\n\t\t$FTM_HelpDescription += \"  文件纹理管理器适用于Windows/Linux/MAC,以一种非常方便的方式管理文件纹理。\\n\\n\";\n\t\t$FTM_HelpDescription += \"  File Texture Manager 基本功能：\\n\\n\";\n\t\t$FTM_HelpDescription += \"  1. 分析场景文件纹理\\n\";\n\t\t$FTM_HelpDescription += \"  2. 将原始纹理文件复制或移动到用户定义的路径\\n\";\n\t\t$FTM_HelpDescription += \"  3. 更新文件纹理的路径\\n\";\n\t\t$FTM_HelpDescription += \"  4. 也支持Mentalray纹理节点\\n\\n\";\n\t\t$FTM_HelpDescription += \"  FTM 额外功能：\\n\";\n\t\t$FTM_HelpDescription += \"  1. 替换文件纹理路径的根字符串。例如,重定向源代码\\n\";\n\t\t$FTM_HelpDescription += \"  2. 根据文件纹理的分辨率设置/取消设置内存效率。大于“阈值”(Threshold)(x或y)的纹理将设置为在设置模式下使用渲染器首选格式(Maya为BOT,mentalray为.map)。如果需要,将自动生成相应的内存高效文件。取消设置时,x和y中小于阈值的所有纹理都将设置为使用法线纹理,从该文件生成了内存高效纹理。BOT取消设置假设法线纹理存在于同一目录中。Mentalray.map unset将首先检查是否存在法线纹理。如果没有,FTM将尝试从.map文件中提取一个。指向序列的节点将被忽略。\\n\";\n\t\t$FTM_HelpDescription += \"  3. 将筛选类型设置为选定文件节点的指定类型。\\n\";\n\t\t$FTM_HelpDescription += \"  4. 将选定文件节点的纹理文件格式从“从”转换为“到”。如果“From”不是“*\\”,则只处理纹理文件格式与“From \\”匹配的文件节点。对于使用图像序列作为纹理文件的文件节点,需要指定转换范围,因此只打印出相应的命令,而不是真正执行任务。此函数使用Maya“imgcvt\\”和mentalray\\“imf_copy”多功能进行转换,因此请确保它们可以在系统可执行路径中找到。\\n\\n\";\n\t\t$FTM_HelpDescription += \"【工作流程】：\\n\";\n\t\t$FTM_HelpDescription += \"  步骤 1. 分析场景文件纹理(可选择方式)\\n\";\n\t\t$FTM_HelpDescription += \"  步骤 2. 通过选中UI中的相关复选框,选择要管理的场景文件纹理(节点)\\n         也可以通过自己的方法执行此操作,例如在Hypershade中选择它们。\\n\";\n\t\t$FTM_HelpDescription += \"  步骤 3. 根据需要设置选项。\\n\";\n\t\t$FTM_HelpDescription += \"  步骤 4. 通过按下相关按钮进行复制、移动或设置。\\n\\n\";\n\t\t$FTM_HelpDescription += \"【小贴士】：\\n\";\n\t\t$FTM_HelpDescription += \"  1. 始终为每个纹理文件保留两个不同的版本。例如,“abc_LowRes.tga\\”处于低分辨率,而“abc_HighRes.tga”处于高分辨率。使用低分辨率纹理来加速交互。只需记住在渲染之前使用FileTextureManager将每个文件纹理重置为指向相关的高分辨率纹理即可。(添加前缀、添加后缀,甚至替换字符串。)\\n\";\n\t\t$FTM_HelpDescription += \"  2. File Texture Manager 的UI不会像属性编辑器那样动态更新,因此最好重新-分析场景文件纹理 每次完成FTM工作时。如果您根本不使用分析功能,则无需执行此操作。\\n\\n\";\n\t\t$FTM_HelpDescription += \"【注释】：\\n\";\n\t\t$FTM_HelpDescription += \"  1. 如果用户决定创建一个新文件夹,最终目标目录将等于目标目录加上新文件夹。\\n\";\n\t\t$FTM_HelpDescription += \"  2. 添加后缀功能对纹理文件名有限制。为了确保它按要求工作,文件名必须是常规格式,例如 filename.ext\\”、“filename.[#…#].ext\\“、\\”filename.ext.[#…#]\\n\";\n\t\t$FTM_HelpDescription += \"  3. 添加prfix、添加后缀和替换字符串可以同时执行到每个文件纹理。替换字符串首先计算,然后添加后缀,最后添加前缀。\\n\";\n\t\t$FTM_HelpDescription += \"  4. 强烈建议不要在前缀、后缀、旧字符串和新字符串中包含“.\\”。\\n\";\n\t\t$FTM_HelpDescription += \"  5. 有时过程会失败。原因可能多种多样。最可能的原因可能是以下两个原因之一或两者：a.在源目录中找不到纹理文件；b.被拒绝阅读、书写或删除。\\n\\n\";\n\t\t$FTM_HelpDescription += \"【详情】:\\n\";\n\t\t$FTM_HelpDescription += \"  1. 分析场景文件纹理可以让你知道场景中有多少文件纹理,在哪里,它们是否存在,等等。它还允许用户只需单击一次就可以选择指向同一路径的所有纹理文件。\\n\";\n\t\t$FTM_HelpDescription += \"  2. 如何选择操作模式取决于不同的源目录状态。如果文件所在位置,请使用“自动”模式,否则请使用“手动”模式。\\n\";\n\t\t$FTM_HelpDescription += \"  3. 其他功能如UI中所示非常明确。\\n\";\n\n\tscrollField -e -text $FTM_HelpDescription ($FTM_HelpForm + \"|FTM_HelpField\");\n}\n\n\n//判断输入字符串是格式扩展名、序列还是只是文件基名称的一部分\n\nproc int FTM_FCWhatIs(string $string)\n{\nint $isWhat;\nglobal string $FTM_FCAllFormats[];\n$string = tolower($string);\n\nif (stringArrayCount($string,$FTM_FCAllFormats))\n\t$isWhat = 0;\nelse if (size(match(\"[0-9]*\",$string)) == size($string))\n\t$isWhat = 1;\nelse if ($string == \"bot\")\n\t$isWhat = 3;\nelse\n\t$isWhat = 2;\n\nreturn $isWhat;\n}\n\n//判断纹理文件格式,仅根据可能的扩展名\n\nproc string[] FTM_FCFileRegularName(string $file)\n{\n$file = substituteAll (\"\\\\\\\\\", $file, \"/\");\nstring $fileRegularName[] = stringToStringArray(basename($file,\"\"),\".\");\n\nstring $fileName;\nstring $seqNum;\nstring $fileFormat;\n\nswitch (size($fileRegularName))\n\t{\n\tcase 0: \n\tbreak;\n\tcase 1:\n\t\t$fileName = $fileRegularName[0];\n\tbreak;\n\tcase 2:\n\t\tif (FTM_FCWhatIs($fileRegularName[1]) == 0)\n\t\t\t{\n\t\t\t$fileName = $fileRegularName[0];\n\t\t\t$fileFormat = $fileRegularName[1];\n\t\t\t}\n\t\telse if (FTM_FCWhatIs($fileRegularName[1]) == 1)\n\t\t\t{\n\t\t\t$fileName = $fileRegularName[0];\n\t\t\t$seqNum = $fileRegularName[1];\n\t\t\t}\n\t\telse \n\t\t\t$fileName = basename($file,\"\");\n\tbreak;\n\tdefault: \n\t\tstring $lastPiece = $fileRegularName[size($fileRegularName)-1];\n\t\tif (FTM_FCWhatIs($lastPiece) == 0)\n\t\t\t{\n\t\t\t$fileFormat = $lastPiece;\n\t\t\t$fileName = basenameEx($file);\n\t\t\t$lastPiece = $fileRegularName[size($fileRegularName)-2];\n\t\t\tif (FTM_FCWhatIs($lastPiece) == 1)\n\t\t\t\t{\n\t\t\t\t$seqNum = $lastPiece;\n\t\t\t\t$fileName = basenameEx($fileName);\n\t\t\t\t}\n\t\t\t}\n\t\telse if (FTM_FCWhatIs($lastPiece) == 1)\n\t\t\t{\n\t\t\t$seqNum = $lastPiece;\n\t\t\t$fileName = basenameEx($file);\n\t\t\t$lastPiece = $fileRegularName[size($fileRegularName)-2];\n\t\t\tif (FTM_FCWhatIs($lastPiece) == 0)\n\t\t\t\t{\n\t\t\t\t$fileFormat = $lastPiece;\n\t\t\t\t$fileName = basenameEx($fileName);\n\t\t\t\t}\n\t\t\t}\n\t\telse if (FTM_FCWhatIs($lastPiece) == 3) \n\t\t\t{\n\t\t\t$fileFormat = $fileRegularName[size($fileRegularName)-2] + \".bot\";\n\t\t\tif (size($fileRegularName) == 3)\n\t\t\t\t$fileName = $fileRegularName[0];\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t$lastPiece = $fileRegularName[size($fileRegularName)-3];\n\t\t\t\tif (FTM_FCWhatIs($lastPiece) == 1)\n\t\t\t\t\t{\n\t\t\t\t\t$seqNum = $lastPiece;\n\t\t\t\t\t$fileName = basenameEx(basenameEx(basenameEx($file)));\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$fileName = basenameEx(basenameEx($file));\n\t\t\t\t}\n\t\t\t}\n\t\telse // really sick!!!\n\t\t\t$fileName = basename($file,\"\");\n\tbreak;\n\t}\n\n$fileRegularName[0] = $fileName;\n$fileRegularName[1] = $seqNum;\n$fileRegularName[2] = $fileFormat;\n\nreturn $fileRegularName;\n}\n\nproc string FTM_FCSubstituteLastPattern(string $inputString, string $targetPattern, string $newPattern)\n{\n$inputString = substituteAll(\"\\\\\\\\\", $inputString, \"/\");\n\n\nstring $exp1 = \"^.*\" + $targetPattern + \"+\";\nstring $noTail = match($exp1,$inputString);\n\n\nstring $exp2 = $targetPattern + \"+$\";\nstring $newNoEnd = substitute($exp2,$noTail,$newPattern);\n\nstring $badChar[] = {\"+\",\".\",\"^\",\"$\",\"[\",\"]\",\"(\",\")\"};\nfor ($char in $badChar)\n\t$noTail = `substituteAllString $noTail $char (\"\\\\\"+$char)`;\nstring $exp3 = \"^\" + $noTail + \"+\";\nstring $outputString = substitute($exp3,$inputString,$newNoEnd);\n\n$outputString = toNativePath($outputString);\nreturn $outputString;\n}\n\n\n//分析输入文件名的位数\n\nproc int FTM_FCDigitsNumber(string $fileName)\n{\nstring $fileRegularName[] = FTM_FCFileRegularName($fileName);\n$fileName = FTM_FCSubstituteLastPattern($fileName,$fileRegularName[1],\"*\");\nstring $filesInSeq[] = `getFileList -fs $fileName`;\n\nint $digiNum = 0;\nfor ($i=0;$i<size($filesInSeq);$i++)\n\t{\n\tstring $tmp[] = FTM_FCFileRegularName($filesInSeq[$i]);\n\tif ($digiNum <= size($tmp[1]))\n\t\t$digiNum = size($tmp[1]);\n\t}\n\nreturn $digiNum;\n}\n\n// 文件格式转换器\n\nproc FTM_FCGo(int $progressUI, string $sourceFormatUI, string $targetFormat, int $handleSeq, int $updatePath, int $removeOrig)\n\n{\nif (FTM_SelCheck(`ls -sl -typ file `)) {\n\twaitCursor -state on;\n\tFTM_Log \"start\" \"\" \"\";\n\n\tstring $fileNodesList[] = FTM_FCGetMatches($sourceFormatUI);\n\n\tint $isSeq[];\n\tint $isOneOfSeq[];\n\n\n\tstring $file;\n\tstring $fileFC;\n\tstring $fileUpdatePath;\n\tstring $fileRemove;\n\n\n\tif ($progressUI) {\n\n\t\tint $progress = 0;\n\t\tint $percentage = 0;\n\t\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size($fileNodesList)`;\n\t}\n\n\n\tfor ($i=0;$i<size($fileNodesList);$i++){\n\t\tFTM_Log \"\" ($fileNodesList[$i]+\":\") \"\";\n\n\t\tif ($progressUI){\n\n\t\t\tif ( `progressWindow -q -ic` ){\n\t\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$progress = $i+1;\n\t\t\t$percentage = $progress * (100/size($fileNodesList));\n\t\t\tprogressWindow -e -pr $progress -st (\"Handling \" + $fileNodesList[$i] + \"     ......  \" + $percentage + \"%\");\n\t\t}\n\n\t\t$file = toNativePath(substituteAll(\"\\\\\\\\\",`getAttr ($fileNodesList[$i] + \".fileTextureName\")`,\"/\"));\n\t\t$fileFC = $file;\n\t\t$fileRemove = $file;\n\t\tstring $fileRegularName[] = FTM_FCFileRegularName($file);\n\t\tstring $isBOT = `match \"bot\" $fileRegularName[2]`;\n\t\tif (size($isBOT)) {\n\t\t\tFTM_Log \"\" \"Texture file is a BOT file. Skipped!\" \"\";\n\t\t\tcontinue;\n\t\t}\n\t\tstring $targetFile = FTM_FCSubstituteLastPattern($file,$fileRegularName[2],$targetFormat);\n\n\t\tif (!size($fileRegularName[2]))\n\t\t\t$targetFile += \".\" + $targetFormat;\n\t\t$fileUpdatePath = $targetFile;\n\t\tstring $cmp1,$cmp2;\n\t\t$cmp1 = $fileUpdatePath;\n\t\t$cmp2 = $fileRemove;\n\t\tif (`about -nt`) {\n\t\t\t$cmp1 = toNativePath(tolower($cmp1));\n\t\t\t$cmp2 = toNativePath(tolower($cmp2));\n\t\t}\n\n\t\tif($cmp1 == $cmp2)\n\t\t\tFTM_Log \"\" \"\" \"This file node was already handled before. Process skipped.\";\n\n\t\telse{\n\t\t\t$isSeq[$i] = 0;\n\t\t\t$isOneOfSeq[$i] = 0;\n\t\t\tif (`nodeType $fileNodesList[$i]` == \"file\" && size($fileRegularName[1])) {\n\t\t\t\tif (`getAttr ($fileNodesList[$i] + \".useFrameExtension\")`)\n\t\t\t\t\t$isSeq[$i] = 1;\n\t\t\t\telse\n\t\t\t\t\t$isOneOfSeq[$i] = 1;\n\t\t\t}\n\n\n\t\t\tint $isMR_c = 0; \n\t\t\tint $isMR_x = 0; \n\t\t\tif ($fileRegularName[2] == \"map\" && $targetFormat != \"map\")\n\t\t\t\t$isMR_x = 1;\n\t\t\telse if ($fileRegularName[2] != \"map\" && $targetFormat == \"map\")\n\t\t\t\t$isMR_c = 1;\n\t\t\tstring $cmdFC = \"system(\\\"\";\n\t\t\tif ($isMR_c)\n\t\t\t\t$cmdFC += \"imf_copy -p -r\";\n\t\t\telse if ($isMR_x)\n\t\t\t\t$cmdFC += \"imf_copy\";\n\t\t\telse\n\t\t\t\t$cmdFC += \"imgcvt -t \" + $targetFormat;\n\t\t\tstring $cmdUpdatePath = \"setAttr -typ \\\"string\\\" \" + $fileNodesList[$i] + \".fileTextureName \";\n\t\t\tstring $cmdRemoveOrig = \"sysFile -del \\\"\";\n\n\t\t\tif (!$handleSeq && $isSeq[$i])\n\t\t\t\tFTM_Log \"\" \"\" \"Sequence was not selected to be handled. Skipped.\";\n\t\t\telse { \n\t\t\t\tif ($handleSeq && $isSeq[$i]){\n\t\t\t\t\tstring $padding = \"\";\n\t\t\t\t\tfor ($j=0;$j<FTM_FCDigitsNumber($file);$j++)\n\t\t\t\t\t\t$padding += \"@\";\n\t\t\t\t\t$targetFile = FTM_FCSubstituteLastPattern($targetFile,$fileRegularName[1],$padding);\n\t\t\t\t\t$fileFC = FTM_FCSubstituteLastPattern($file,$fileRegularName[1],$padding);\n\t\t\t\t\t$fileRemove = FTM_FCSubstituteLastPattern($file,$fileRegularName[1],\"*\");\n\n\t\t\t\t\tif (!$isMR_c && !$isMR_x)\n\t\t\t\t\t\t$cmdFC += \" -n startIn endIn stepIn -N startOut endOut stepOut\";\n\t\t\t\t}\n\t\t\t\t$cmdFC += \" \\\\\\\"\" + encodeString($fileFC) + \"\\\\\\\" \\\\\\\"\" + encodeString($targetFile) + \"\\\\\\\"\";\n\t\t\t\tif ($isMR_c || $isMR_x)\n\t\t\t\t\t$cmdFC += \" \" + $targetFormat + \"\\\")\";\n\t\t\t\telse\n\t\t\t\t\t$cmdFC += \"\\\")\";\n\n\t\t\t\tif (`file -q -ex $fileUpdatePath`)\n\t\t\t\t\tFTM_Log \"\" \"\" \"Convertion skipped. New format texture exists, maybe convertion has been done before.\";\n\t\t\t\telse{ \n\t\t\t\t\tif (!$isSeq[$i]){\n\t\t\t\t\t\tstring $cmdFCFeedback = eval($cmdFC);\n\t\t\t\t\t\tif (size($cmdFCFeedback))\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" $cmdFCFeedback;\n\t\t\t\t\t\tif (`file -q -ex $fileUpdatePath`)\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Convertion succeeded. Converted from \\\"\" + $fileFC + \"\\\" to \\\"\" + $targetFile + \"\\\".\");\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"Convertion failed. Could be file permission problem, disk capacity problem or source texture is of unknown/unsupported format.\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$isMR_c && !$isMR_x)\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Sequence specified. Command to execute (format conversion):\" + $cmdFC);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"Sequence specified. Use \\\"imf_copy\\\" to convert your tetures. A simple loop might be needed.\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($updatePath) {\n\t\t\t\t\t$cmdUpdatePath += \"\\\"\" + encodeString(toNativePath($fileUpdatePath)) + \"\\\";\";\n\t\t\t\t\t$cmdRemoveOrig += encodeString($fileRemove) + \"\\\";\";\n\n\t\t\t\t\tif (!$isSeq[$i]){\n\t\t\t\t\t\tif (`file -q -ex $fileUpdatePath`){\n\t\t\t\t\t\t\tif(catchQuiet(eval($cmdUpdatePath))) {\n\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTextureName\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Path updating failed. So Original Texture Removing will not be done even if it was selected to.\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Path updating succeeded. Set to \\\"\" + (toNativePath($fileUpdatePath)) + \"\\\".\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ($removeOrig){\n\t\t\t\t\t\t\t\t\tif ($isOneOfSeq[$i])\n\t\t\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"Only one file of a whole sequence is used as texture, no file in the sequence is supposed to be removed.\";\n\t\t\t\t\t\t\t\t\telse if (!$isSeq[$i]){\n\t\t\t\t\t\t\t\t\t\tif (!eval($cmdRemoveOrig))\n\t\t\t\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"Original texture removing failed, could be file permission problem.\";\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Original texture removing succeeded. Removed \\\"\" + $fileRemove + \"\\\".\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" \"Convertion failed, Path Updating and Original Texture Removing will not be done even if they were selected to.\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Sequence specified. Command to execute (update path info):\" + $cmdUpdatePath);\n\t\t\t\t\t\tif ($removeOrig)\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Sequence specified. Command to execute (remove original textures):\" + $cmdRemoveOrig);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (!size($fileNodesList))\n\t\tFTM_Log \"\" \"No texture is of specified format.\" \"\";\n\tif ($progressUI){\n\t\tprogressWindow -ep;\n\t\tFTM_Log \"end\" \"\" \"\";\n\t\tFTM_END;\n\t}\n\twaitCursor -state off;\n}\n}\n\nglobal proc string[] FTM_FCGetMatches (string $formatUI)\n{\nstring $fileNodesList[];\nstring $tmpNodesList[] = `ls -sl -typ file `; \nif (`FTM_SelCheck $tmpNodesList`) {\n\tstring $tmpNode; \n\tstring $tmpFile; \n\n\tstring $format = `optionMenu -q -v $formatUI`;\n\tif ($format!=\"*\") {\n\t\tfor ($tmpNode in $tmpNodesList)\t{\n\t\t\t$tmpFile = `getAttr ($tmpNode + \".fileTextureName\")`;\n\t\t\tstring $tmpFileRegularName[] = FTM_FCFileRegularName($tmpFile);\n\t\t\tif (tolower($tmpFileRegularName[2]) == tolower($format))\n\t\t\t\t$fileNodesList[size($fileNodesList)] = $tmpNode;\n\t\t}\n\t}\n\telse \n\t\t$fileNodesList = $tmpNodesList;\n}\nreturn $fileNodesList;\n}\n\nglobal proc FTM_FCGatherInfo(string $FTM_ExtraFunctionColumn)\n{\nstring $sourceFormatUI = $FTM_ExtraFunctionColumn + \"|FTM_FCRow|FTM_FCSourceMenu\";\nstring $targetFormat = `optionMenu -q -v ($FTM_ExtraFunctionColumn + \"|FTM_FCRow|FTM_FCTargetMenu\")`;\nint $handleSeq = `checkBox -q -v ($FTM_ExtraFunctionColumn + \"|FTM_SeqCheck\")`;\nint $updatePath = `checkBox -q -v ($FTM_ExtraFunctionColumn + \"|FTM_UpdateCheck\")`;\nint $removeOrig = `checkBox -q -v ($FTM_ExtraFunctionColumn + \"|FTM_RemoveCheck\")`;\n\nFTM_FCGo \t1\n\t\t$sourceFormatUI\n\t\t$targetFormat\n\t\t$handleSeq\n\t\t$updatePath\n\t\t$removeOrig;\n}\n\n\nglobal proc FTM_FilterSetup(string $FTM_ExtraFunctionColumn)\n{\nstring $Nodes[] = `ls -sl -typ file`;\nif (`FTM_SelCheck $Nodes`) {\n\twaitCursor -state on;\n\tFTM_Log \"start\" \"\" \"\";\n\tint $filterType = `optionMenu -q -sl ($FTM_ExtraFunctionColumn+\"|FTM_FilterTypeRow|FTM_FilterTypeMenu\")` -1;\n\tstring $filter = `optionMenu -q -v ($FTM_ExtraFunctionColumn+\"|FTM_FilterTypeRow|FTM_FilterTypeMenu\")`;\n\n\tint $progress = 0;\n\tint $percentage = 0;\n\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size $Nodes`;\n\n\tfor ($i=0;$i<size($Nodes);$i++) {\n\t\tFTM_Log \"\" ($Nodes[$i]+\":\") \"\";\n\t\tif ( `progressWindow -q -ic` ){\n\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\tbreak;\n\t\t}\n\t\t$progress = $i;\n\t\t$percentage = $progress * 100 / size($Nodes);\n\t\tprogressWindow -e -pr $progress -st (\"Setting filter type, please wait......      \" + $percentage + \"%\");\n\n\t\tstring $cmd = \"setAttr \" + $Nodes[$i] + \".filterType \" + $filterType;\n\t\tif (catchQuiet(eval($cmd)))\n\t\t\tFTM_Log \"\" \"\" \"Attribute \\\"filterType\\\" is locked/connected and can NOT be modified!\";\n\t\telse\n\t\t\tFTM_Log \"\" \"\" (\"Set filter type to \\\"\" + $filter + \"\\\"\");\n\t}\n\tprogressWindow -ep;\n\tFTM_Log \"end\" \"\" \"\";\n\tFTM_END;\n\twaitCursor -state off;\n}\n}\n\n\n\nglobal proc FTM_BOTSetup(int $FTM_BOTMode, string $FTM_ExtraFunctionColumn)\n{\nstring $FTM_FileNodes[]=`ls -sl -typ file`;\nif (`FTM_SelCheck $FTM_FileNodes`) {\n\twaitCursor -state on;\n\tFTM_Log \"start\" \"\" \"\";\n\tint $progress = 0;\n\tint $percentage = 0;\n\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size $FTM_FileNodes`;\n\n\tfor ($i=0; $i<size($FTM_FileNodes); $i++){\n\t\tFTM_Log \"\" ($FTM_FileNodes[$i]+\":\") \"\";\n\t\tif ( `progressWindow -q -ic` ){\n\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\tbreak;\n\t\t}\n\t\t$progress = $i;\n\t\t$percentage = $progress * 100 / size($FTM_FileNodes);\n\t\tprogressWindow -e -pr $progress -st (\"Setting BOT options, please wait......      \" + $percentage + \"%\");\n\t\tif (`getAttr ($FTM_FileNodes[$i] + \".useFrameExtension\")`) {\n\t\t\tFTM_Log \"\" \"\" \"Sequence specified, Skipped!\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tint $resolution = `intFieldGrp -q -v1 ($FTM_ExtraFunctionColumn + \"|FTM_BOTRow|FTM_BOTResFieldGrp\")`;\n\t\tfloat $xRes = `getAttr ($FTM_FileNodes[$i] + \".outSizeX\")`;\n\t\tfloat $yRes = `getAttr ($FTM_FileNodes[$i] + \".outSizeY\")`;\n\n\t\tif ($FTM_BOTMode) {\n\t\t\tif ($xRes >= $resolution || $yRes >= $resolution) {\n\t\t\t\tstring $FTM_File = `getAttr ($FTM_FileNodes[$i] + \".fileTextureName\")`;\n\t\t\t\t$FTM_File = `substituteAll \"\\\\\\\\\" $FTM_File \"/\"`;\n\t\t\t\tstring $FTM_TheBOT = `substitute \"(\\\\.bot)*$\" $FTM_File \"\"` + \".bot\";\n\t\t\t\tstring $BOTCmd = \"makebot -c  -r \" + $resolution + \" -i \\\"\" + $FTM_File + \"\\\" -o \\\"\" + $FTM_TheBOT + \"\\\"\";\n\t\t\t\tif (catchQuiet(eval($BOTCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"BOT file generation failed. Could be permission issue or the BOT file already exists.\";\n\t\t\t\tstring $cacheCmd = \"setAttr \" + $FTM_FileNodes[$i] + \".useCache 1\";\n\t\t\t\tstring $pathCmd = \"setAttr -typ \\\"string\\\" \" + $FTM_FileNodes[$i] + \".fileTextureName \\\"\" + $FTM_TheBOT + \"\\\"\";\n\t\t\t\tif (catchQuiet(eval($cacheCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"useCache\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\telse if (catchQuiet(eval($pathCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTextureName\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\telse\n\t\t\t\t\tFTM_Log \"\" \"\" \"BOT setup OK.\";\n\t\t\t}\n\t\t\telse\n\t\t\t\tFTM_Log \"\" \"\" (\"Resolution \\\"\" + $xRes + \"x\" + $yRes + \"\\\" is LOWER than specified threshold, skipped!\");\n\t\t}\n\t\telse {\n\t\t\tif ($xRes <= $resolution && $yRes <= $resolution) {\n\t\t\t\tstring $cacheCmd = \"setAttr \" + $FTM_FileNodes[$i] + \".useCache 0\";\n\t\t\t\tstring $FTM_File = `getAttr ($FTM_FileNodes[$i] + \".fileTextureName\")`;\n\t\t\t\t$FTM_File = `substituteAll \"\\\\\\\\\" $FTM_File \"/\"`;\n\t\t\t\t$FTM_File = `substitute \"(\\\\.bot)*$\" $FTM_File \"\"`;\n\t\t\t\tstring $pathCmd = \"setAttr -typ \\\"string\\\" \" + $FTM_FileNodes[$i] + \".fileTextureName \\\"\" + $FTM_File + \"\\\"\";\n\t\t\t\tif (catchQuiet(eval($cacheCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"useCache\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\telse if (catchQuiet(eval($pathCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTexturename\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\telse\n\t\t\t\t\tFTM_Log \"\" \"\" \"BOT cancelled successfully.\";\n\t\t\t}\n\t\t\telse\n\t\t\t\tFTM_Log \"\" \"\" (\"Resolution \\\"\" + $xRes + \"x\" + $yRes + \"\\\" is HIGHER than specified threshold, skipped!\");\n\t\t}\n\t}\n\tprogressWindow -ep;\n\tFTM_Log \"end\" \"\" \"\";\n\tFTM_END;\n\twaitCursor -state off;\n}\n}\n\nglobal proc FTM_MAPSetup(int $FTM_MAPMode, string $FTM_ExtraFunctionColumn)\n{\nstring $FTM_FileNodes[]=`ls -sl -typ file`;\nif (`FTM_SelCheck $FTM_FileNodes`) {\n\twaitCursor -state on;\n\tFTM_Log \"start\" \"\" \"\";\n\tint $progress = 0;\n\tint $percentage = 0;\n\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size $FTM_FileNodes`;\n\n\tfor ($i=0; $i<size($FTM_FileNodes); $i++){\n\t\tFTM_Log \"\" ($FTM_FileNodes[$i]+\":\") \"\";\n\t\tif ( `progressWindow -q -ic` ){\n\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\tbreak;\n\t\t}\n\t\t$progress = $i;\n\t\t$percentage = $progress * 100 / size($FTM_FileNodes);\n\t\tprogressWindow -e -pr $progress -st (\"Setting up mentalray memory-mapped textures, please wait......      \" + $percentage + \"%\");\n\n\t\tif (`getAttr ($FTM_FileNodes[$i] + \".useFrameExtension\")`) {\n\t\t\tFTM_Log \"\" \"\" \"Sequence specified, Skipped!\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tint $resolution = `intFieldGrp -q -v1 ($FTM_ExtraFunctionColumn + \"|FTM_MAPRow|FTM_MAPResFieldGrp\")`;\n\t\tfloat $xRes = `getAttr ($FTM_FileNodes[$i] + \".outSizeX\")`;\n\t\tfloat $yRes = `getAttr ($FTM_FileNodes[$i] + \".outSizeY\")`;\n\n\t\tif ($FTM_MAPMode) {\n\t\t\tif ($xRes >= $resolution || $yRes >= $resolution) {\n\t\t\t\tstring $FTM_File = `getAttr ($FTM_FileNodes[$i] + \".fileTextureName\")`;\n\t\t\t\t$FTM_File = `substituteAll \"\\\\\\\\\" $FTM_File \"/\"`;\n\t\t\t\tstring $FTM_TheMAP = `substitute \"(\\\\.map)*$\" $FTM_File \"\"` + \".map\";\n\t\t\t\tstring $MAPCmd = \"system(\\\"imf_copy -p -r \\\\\\\"\" + (encodeString(`toNativePath $FTM_File`)) + \"\\\\\\\" \\\\\\\"\" + (encodeString(`toNativePath $FTM_TheMAP`)) + \"\\\\\\\" map\\\")\";\n\t\t\t\tif (`file -q -ex $FTM_TheMAP`){\n\t\t\t\t\tFTM_Log \"\" \"\" (\"Mentalray memory-mapped texture file \\\"\" + `toNativePath $FTM_TheMAP` + \"\\\" already exists. FTM will directly use it.\");\n\t\t\t\t} else {\n\t\t\t\t\tif (catchQuiet(eval($MAPCmd)))\n\t\t\t\t\t\tFTM_Log \"\" \"\" \"Mentalray memory-mapped texture file generation failed. Could be permission issue or 'imf_copy' can not be found in system executable path.\";\n\t\t\t\t}\n\t\t\t\tstring $pathCmd = \"setAttr -typ \\\"string\\\" \" + $FTM_FileNodes[$i] + \".fileTextureName \\\"\" + $FTM_TheMAP + \"\\\"\";\n\t\t\t\tif (catchQuiet(eval($pathCmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTextureName\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\telse\n\t\t\t\t\tFTM_Log \"\" \"\" \"Mentalray memory-mapped texture setup accomplished.\";\n\t\t\t}\n\t\t\telse\n\t\t\t\tFTM_Log \"\" \"\" (\"Resolution \\\"\" + $xRes + \"x\" + $yRes + \"\\\" is LOWER than specified threshold, skipped!\");\n\t\t}\n\t\telse {\n\t\t\tif ($xRes <= $resolution && $yRes <= $resolution) {\n\t\t\t\tstring $FTM_File = `getAttr ($FTM_FileNodes[$i] + \".fileTextureName\")`;\n\t\t\t\t$FTM_File = `substituteAll \"\\\\\\\\\" $FTM_File \"/\"`;\n\t\t\t\tstring $FTM_TheMAP = $FTM_File;\n\t\t\t\t$FTM_File = `substitute \"(\\\\.map)*$\" $FTM_File \"\"`;\n\t\t\t\tint $wrong = 0;\n\t\t\t\tif (!`file -q -ex $FTM_File`){\n\t\t\t\t\tFTM_Log \"\" \"\" (\"Normal texture file \\\"\" + `toNativePath $FTM_File` + \"\\\" doesn't exist.\");\n\t\t\t\t\tFTM_Log \"\" \"\" (\"FTM is trying to extract one (in Maya iff format) from \\\"\" + `toNativePath $FTM_TheMAP` + \"\\\"\");\n\t\t\t\t\tstring $UnMAPCmd = \"system(\\\"imf_copy \\\\\\\"\" + (encodeString(`toNativePath $FTM_TheMAP`)) + \"\\\\\\\" \\\\\\\"\" + (encodeString(`toNativePath $FTM_File`)) + \"\\\\\\\" iff\\\")\";\n\t\t\t\t\tif (catchQuiet(eval($UnMAPCmd))) {\n\t\t\t\t\t\t$wrong = 1;\n\t\t\t\t\t\tFTM_Log \"\" \"\" (\"WARNING: Extracting normal texture file from \\\"\" + `toNativePath $FTM_TheMAP` + \"\\\" failed.\");\n\t\t\t\t\t\tFTM_Log \"\" \"\" \"         Could be permission issue, or 'imf_copy' can not be found in system executable path, or original .map file is not a mentalray memory-mapped texture file.\";\n\t\t\t\t\t} else\n\t\t\t\t\t\tFTM_Log \"\" \"\" (\"Extraction succeed. => \\\"\" + `toNativePath $FTM_File` + \"\\\"\");\n\t\t\t\t}\n\t\t\t\tif (!$wrong) {\n\t\t\t\t\tstring $pathCmd = \"setAttr -typ \\\"string\\\" \" + $FTM_FileNodes[$i] + \".fileTextureName \\\"\" + $FTM_File + \"\\\"\";\n\t\t\t\t\tif (catchQuiet(eval($pathCmd)))\n\t\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTexturename\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\t\telse\n\t\t\t\t\t\tFTM_Log \"\" \"\" \"Mentalray memory-mapped texture file unset accomplished.\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tFTM_Log \"\" \"\" (\"Resolution \\\"\" + $xRes + \"x\" + $yRes + \"\\\" is HIGHER than specified threshold, skipped!\");\n\t\t}\n\t}\n\tprogressWindow -ep;\n\tFTM_Log \"end\" \"\" \"\";\n\tFTM_END;\n\twaitCursor -state off;\n}\n}\n\nglobal proc FTM_Substitute(string $oldRootField, string $newRootField)\n{\nstring $oldRoot = `textFieldButtonGrp -q -text $oldRootField`;\n$oldRoot = substituteAll(\"\\\\\\\\\",$oldRoot,\"/\");\nstring $newRoot = `textFieldButtonGrp -q -text $newRootField`;\n$newRoot = substituteAll(\"\\\\\\\\\",$newRoot,\"/\");\nif (size($oldRoot)==0 || size($newRoot)==0)\n\tconfirmDialog -t \"File Texture Manager\" -m \"Both the Old Root filed and the New Root field must be filled!\" -b \"OK\";\nelse {\n\tstring $fileNodes[] = `ls -sl -typ file  -typ psdFileTex`;\n\tif (`FTM_SelCheck $fileNodes`){\n\t\twaitCursor -state 1;\n\t\tFTM_Log \"start\" \"\" \"\";\n\t\tstring $badChar[] = {\"+\",\".\",\"^\",\"$\",\"[\",\"]\",\"(\",\")\"};\n\t\tfor ($char in $badChar)\n\t\t\t$oldRoot = `substituteAllString $oldRoot $char (\"\\\\\"+$char)`;\n\n\t\tstring $node;\n\n\t\tint $progress = 0;\n\t\tint $percentage = 0;\n\t\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size $fileNodes`;\n\n\t\tfor ($i=0;$i<size($fileNodes);$i++) {\n\t\t\tFTM_Log \"\" ($fileNodes[$i]+\":\") \"\";\n\t\t\tif ( `progressWindow -q -ic` ){\n\t\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$progress = $i;\n\t\t\t$percentage = $progress * 100 / size($fileNodes);\n\t\t\tprogressWindow -e -pr $progress -st (\"Redirecting, please wait......      \" + $percentage + \"%\");\n\n\t\t\tstring $old = `getAttr ($fileNodes[$i]+\".fileTextureName\")`;\n\t\t\t$old = `substituteAll \"\\\\\\\\\" $old \"/\"`;\n\t\t\tstring $new = `substitute $oldRoot $old $newRoot`;\n\t\t\tstring $cmd = \"setAttr -typ \\\"string\\\" \" + $fileNodes[$i] + \".fileTextureName \\\"\" + $new + \"\\\"\";\n\t\t\tif (catchQuiet(eval($cmd)))\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: Attribute \\\"fileTextureName\\\" is locked/connected and can NOT be modified!\";\n\t\t\telse\n\t\t\t\tFTM_Log \"\" \"\" (\"Set to \\\"\" + (toNativePath($new)) + \"\\\"\");\n\t\t\tif (!`file -q -ex $new`)\n\t\t\t\tFTM_Log \"\" \"\" (\"WARNING: \\\"\" + (toNativePath($new)) + \"\\\" doesn't exist!\");\n\t\t}\n\t\tprogressWindow -ep;\n\t\tFTM_Log \"end\" \"\" \"\";\n\t\tFTM_END;\n\t\twaitCursor -state 0;\n\t}\n}\n}\n\nglobal proc string getDirectoryFromTexCheck(string $checkLabel)\n{\n\ttextFieldButtonGrp -e -text ($checkLabel+\"/\") FTM_TargetDirectoryField;\n\treturn $checkLabel;\n\t}\nglobal proc FTM_AnalyseFileTextures (string $FTM_ParentUI)\n{\n\twaitCursor -state on;\n\n\tstring $FTM_Groups[] = `FTM_FileTextureAnalyst`;\n\n\tif (`columnLayout -q -ex ($FTM_ParentUI + \"|FTM_AnalysisCheckerColumn\")`)\n\t\tdeleteUI ($FTM_ParentUI + \"|FTM_AnalysisCheckerColumn\");\n\n\tif (size($FTM_Groups) == 0)\n\t\ttext -e -l \"找不到贴图文件\" ($FTM_ParentUI + \"|FTM_EmptyAnalysisText\");\n\telse\n\t{\n\t\ttext -e -l \"分析：\" ($FTM_ParentUI + \"|FTM_EmptyAnalysisText\");\n\n\t\tsetParent $FTM_ParentUI;\n\t\tcolumnLayout FTM_AnalysisCheckerColumn;\n\t\tint $FTM_Groups_Size = size($FTM_Groups);\n\t\tif ($FTM_Groups[0] == \"FTM_EmptySocket_FTM\")\n\t\t\t$FTM_Groups_Size -= 1;\n\t\tif ($FTM_Groups[1] == \"FTM_MissingPathSocket_FTM\")\n\t\t\t$FTM_Groups_Size -= 1;\n\t\tglobal string $lsCmd;\n\t\tstring $FTM_TotalResults = \"总计 \" + size(eval($lsCmd)) + \" 文件纹理指向 \" + $FTM_Groups_Size + \"个路径 : \";\n\t\ttext -l $FTM_TotalResults;\n\t\ttext -l \"\" -h 10;\n\n\t\tFTM_Log \"start\" \"\" \"\";\n\t\tfor ($FTM_Group in $FTM_Groups)\n\t\t{\n\t\t\tstring $buffer[];\n\t\t\ttokenize $FTM_Group \"*\" $buffer;\n\t\t\tint $FTM_FilesStoredSize = size ($buffer)-1;\n\t\t\tstring $FTM_CurrentPath = $buffer[0];\n\t\t\t\n\t\t\tstring $FTM_FileTexturesAnalysis;\n\t\t\tif ($FTM_CurrentPath==\"FTM_EmptySocket_FTM\" && $FTM_FilesStoredSize>0)\n\t\t\t\t$FTM_FileTexturesAnalysis = $FTM_FilesStoredSize + \" 未指定纹理。所以它们不存在。\";\n\t\t\telse if ($FTM_CurrentPath==\"FTM_MissingPathSocket_FTM\" && $FTM_FilesStoredSize>0)\n\t\t\t\t$FTM_FileTexturesAnalysis = $FTM_FilesStoredSize + \" 没有贴图路径信息 纹理不存在 \";\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($FTM_FilesStoredSize>0){\n\t\t\t\t\t$FTM_CurrentPath = `FTM_GetPath \"路径\" $FTM_CurrentPath`;\n\t\t\t\t\t$FTM_FileTexturesAnalysis = $FTM_FilesStoredSize + \" 个贴图路径指向： \\\"\" + (toNativePath($FTM_CurrentPath)) + \"\\\"\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstring $FTM_CurrentFile[];\n\t\t\tstring $FTM_CurrentFiles = \"\";\n\t\t\tstring $FTM_Exist[] = {};\n\t\t\tint $FTM_ExistSize = 0;\n\t\t\tstring $FTM_NotExist[] = {};\n\t\t\tint $FTM_NotExistSize = 0;\n\n\t\t\tfor ($i=1; $i<size($buffer); $i++)\n\t\t\t{\n\n\t\t\t\t$FTM_CurrentFile[$i] = $buffer[$i];\n\t\t\t\t$FTM_CurrentFiles = $FTM_CurrentFiles + $FTM_CurrentFile[$i] + \" \";\n\n\t\t\t\tstring $FTM_CurrentFilePath = `getAttr ($FTM_CurrentFile[$i] + \".fileTextureName\")`;\n\t\t\t\tif ( `file -q -ex $FTM_CurrentFilePath`)\n\t\t\t\t{\n\t\t\t\t\t$FTM_Exist[$FTM_ExistSize] = $FTM_CurrentFile[$i];\n\t\t\t\t\t$FTM_ExistSize = $FTM_ExistSize + 1;\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$FTM_NotExist[$FTM_NotExistSize] = $FTM_CurrentFile[$i];\n\t\t\t\t\t$FTM_NotExistSize = $FTM_NotExistSize + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (size($FTM_FileTexturesAnalysis)) {\n\t\t\t\t\tstring $FTM_MainChecker = `checkBox -l $FTM_FileTexturesAnalysis -al left`;\n\t\t\t\t\tpopupMenu -p $FTM_MainChecker;\n\t\t\t\t\tstring $cmd = \"getDirectoryFromTexCheck(\\\"\"+$buffer[0]+\"\\\")\";\n\t\t\t\t\t\n\t\t\t\t\tmenuItem -label \"复制\" -c $cmd;\n\t\t\t\t\tFTM_Log \"\" \"\" $FTM_FileTexturesAnalysis;\n\n\t\t\t\tstring $FTM_ExistSubChecker;\n\t\t\t\tstring $FTM_NotExistSubChecker;\n\t\t\t\tif ($FTM_CurrentPath!=\"FTM_EmptySocket_FTM\"  && $FTM_CurrentPath!=\"FTM_MissingPathSocket_FTM\")\n\t\t\t\t{\n\t\t\t\t\tcolumnLayout -adj 1 -cat left 30;\n\n\t\t\t\t\t\tstring $FTM_ExistFiles = \"\";\n\t\t\t\t\t\tfor ($i=0; $i<$FTM_ExistSize; $i++)\n\t\t\t\t\t\t\t$FTM_ExistFiles = $FTM_ExistFiles + $FTM_Exist[$i] + \" \";\n\t\t\t\t\t\t$FTM_ExistSubChecker = `checkBox -l ($FTM_ExistSize + \"个贴图已连接\") -al left\n\t\t\t\t\t\t\t-onc (\"select -add \" + $FTM_ExistFiles) -ofc (\"if (\" + $FTM_ExistSize + \" > 0) select -deselect \" + $FTM_ExistFiles)`;\n\n\n\t\t\t\t\t\tstring $FTM_NotExistFiles = \"\";\n\t\t\t\t\t\tfor ($i=0; $i<$FTM_NotExistSize; $i++)\n\t\t\t\t\t\t\t$FTM_NotExistFiles = $FTM_NotExistFiles + $FTM_NotExist[$i] + \" \";\n\t\t\t\t\t\t$FTM_NotExistSubChecker = `checkBox -l ($FTM_NotExistSize + \"个贴图未连接\") -al left\n\t\t\t\t\t\t\t-onc (\"select -add \" + $FTM_NotExistFiles) -ofc (\"if (\" + $FTM_NotExistSize + \" > 0) select -deselect \" + $FTM_NotExistFiles)`;\n\t\t\t\t\tsetParent ($FTM_ParentUI + \"|FTM_AnalysisCheckerColumn\");\n\n\n\t\t\t\t\tcheckBox -e -onc (\"select -add \" + $FTM_CurrentFiles + \";checkBox -e -v 1 -vis 0 \" + $FTM_ExistSubChecker + \";checkBox -e -v 1 -vis 0 \" + $FTM_NotExistSubChecker)\n\t\t\t\t\t\t-ofc (\"if (\" + $FTM_FilesStoredSize + \" > 0) select -deselect \" + $FTM_CurrentFiles + \";checkBox -e -v 0 -vis 1 \" + $FTM_ExistSubChecker + \";checkBox -e -v 0 -vis 1 \" + $FTM_NotExistSubChecker)\n\t\t\t\t\t\t$FTM_MainChecker;\n\t\t\t\t}\n\n\t\t\t\telse\n\t\t\t\t\tcheckBox -e -onc (\"select -add \" + $FTM_CurrentFiles) -ofc (\"if (\" + $FTM_FilesStoredSize + \" > 0) select -deselect \" + $FTM_CurrentFiles) $FTM_MainChecker;\n\t\t\t}\n\t\t}\n\tFTM_Log \"end\" \"\" \"\";\n\t}\n\n\twaitCursor -state off;\n}\n\nglobal proc FTM_BrowseCmd (string $FTM_FileOrPath, string $FTM_TextField, string $FTM_WhichButton, int $FTM_BrowseType)\n{\n\tglobal string $FTM_WorkSpace;\n\tif (size($FTM_WorkSpace) == 0)\n\t{\n\t\t$FTM_WorkSpace = `workspace -q -rd` + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\t\t$FTM_WorkSpace = `FTM_GetPath \"path\" $FTM_WorkSpace`;\n\t}\n\tworkspace -dir $FTM_WorkSpace;\n\n\tglobal int $FTM_NEW_MAYA;\n\tif ($FTM_NEW_MAYA) {\n\t\tif ($FTM_BrowseType == 0) $FTM_BrowseType = 1;\n\t\telse if ($FTM_BrowseType == 4) $FTM_BrowseType = 3;\n\t\tstring $return[] = `fileDialog2 -ds 2 -cap $FTM_WhichButton -dir $FTM_WorkSpace -fm $FTM_BrowseType -okc $FTM_WhichButton -cc \"Cancel\"`;\n\t\tstring $path = $return[0];\n\t\tif (!size($path)) $path = `textFieldButtonGrp -q -text $FTM_TextField`;\n\t\tif ($FTM_FileOrPath == \"file\") $path += \"bugQuickFix\";\n\t\tFTM_ChangeTextField $FTM_FileOrPath $FTM_TextField $path \"\";\n\t}\n\telse {\n\t\tstring $FTM_Temp = \"\";\n\t\t\t$FTM_Temp += \"FTM_ChangeTextField \";\n\t\t\t$FTM_Temp += (\"\\\"\" + $FTM_FileOrPath + \"\\\" \");\n\t\t\t$FTM_Temp += (\"\\\"\" + $FTM_TextField + \"\\\" \");\n\t\tfileBrowser $FTM_Temp $FTM_WhichButton \"\" $FTM_BrowseType;\n\t}\n}\n\nglobal proc FTM_ChangeTextField (string $FTM_FileOrPath, string $FTM_TextField, string $FTM_File, string $FTM_FileType)\n{\n\tstring $FTM_Path = `FTM_GetPath $FTM_FileOrPath $FTM_File`;\n\ttextFieldButtonGrp -e -text (toNativePath($FTM_Path)) $FTM_TextField;\n\tstring $os = `about -os`;\n\tif (gmatch($os, \"*irix*\") || gmatch($os, \"*linux*\"))\n\t\twindow -e -vis false projectViewerWindow;\n\n\tglobal string $FTM_WorkSpace;\n\t$FTM_WorkSpace = $FTM_Path;\n}\n\nglobal proc FTM_ResetUI (string $FTM_OptionColumn,string $FTM_AnalysisColumn,string $FTM_ExtraFunctionColumn,string $FTM_Tabs,string $FTM_CopyButton,string $FTM_MoveButton,string $FTM_SetButton)\n{\n\twaitCursor -state on;\n\n\tglobal int $FTM_WIDTH, $FTM_HEIGHT;\n\twindow -e -wh $FTM_WIDTH $FTM_HEIGHT FTM_MainWindow;\n\n\ttext -e -l \"未分析场景文件\" ($FTM_AnalysisColumn + \"|FTM_EmptyAnalysisText\");\n\n\tif (`columnLayout -q -ex ($FTM_AnalysisColumn + \"|FTM_AnalysisCheckerColumn\")`)\n\t\tdeleteUI ($FTM_AnalysisColumn + \"|FTM_AnalysisCheckerColumn\");\n\tradioButtonGrp -e -select 1 ($FTM_OptionColumn + \"|FTM_OperationMode\");\n\ttextFieldButtonGrp -e -text \"\" -en 0 ($FTM_OptionColumn + \"|FTM_SourceDirectoryField\");\n\tstring $FTM_CurrentProject = `workspace -q -rd`;\n\tstring $FTM_CurrentSourceImagesDir = $FTM_CurrentProject + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\tstring $FTM_SourceImages = `FTM_GetPath \"path\" $FTM_CurrentSourceImagesDir`;\n\ttextFieldButtonGrp -e -text $FTM_SourceImages ($FTM_OptionColumn + \"|FTM_TargetDirectoryField\");\n\tcheckBoxGrp -e -v1 0 ($FTM_OptionColumn + \"|FTM_MakeFolderChecker\");\n\ttextFieldGrp -e -text \"MyTextureFiles\" -en 0 ($FTM_OptionColumn + \"|FTM_NewFolderNameField\");\n\tcheckBox -e -v 0 ($FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_AddPrefixChecker\");\n\ttextField -e -text \"prefix_\" -en 0 ($FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_PrefixField\");\n\tcheckBox -e -v 0 ($FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_AddSuffixChecker\");\n\ttextField -e -text \"_suffix\" -en 0 ($FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_SuffixField\");\n\tcheckBoxGrp -e -v1 0 ($FTM_OptionColumn + \"|FTM_ReplaceStringChecker\");\n\ttextFieldGrp -e -text \"OldString\" -en 0 ($FTM_OptionColumn + \"|FTM_OldStringField\");\n\ttextFieldGrp -e -text \"NewString\" -en 0 ($FTM_OptionColumn + \"|FTM_NewStringField\");\n\n\n\ttextFieldButtonGrp -e -text \"\" ($FTM_ExtraFunctionColumn + \"|oldRootField\");\n\tstring $tmp = `workspace -q -rd` + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\t$tmp = `FTM_GetPath \"path\" $tmp`;\n\ttextFieldButtonGrp -e -text $tmp ($FTM_ExtraFunctionColumn + \"|newRootField\");\n\tintFieldGrp -e -v1 1024 ($FTM_ExtraFunctionColumn + \"|FTM_BOTRow|FTM_BOTResFieldGrp\");\n\tintFieldGrp -e -v1 1024 ($FTM_ExtraFunctionColumn + \"|FTM_MAPRow|FTM_MAPResFieldGrp\");\n\toptionMenu -e -v \"Mipmap\" ($FTM_ExtraFunctionColumn + \"|FTM_FilterTypeRow|FTM_FilterTypeMenu\");\n\toptionMenu -e -v \"\\*\" ($FTM_ExtraFunctionColumn + \"|FTM_FCRow|FTM_FCSourceMenu\");\n\toptionMenu -e -v \"iff\" ($FTM_ExtraFunctionColumn + \"|FTM_FCRow|FTM_FCTargetMenu\");\n\tcheckBox -e -v 0 ($FTM_ExtraFunctionColumn + \"|FTM_SeqCheck\");\n\tcheckBox -e -v 1 ($FTM_ExtraFunctionColumn + \"|FTM_UpdateCheck\");\n\tcheckBox -e -v 0 -en 1 ($FTM_ExtraFunctionColumn + \"|FTM_RemoveCheck\");\n\n\n\ttabLayout -e -sti 1 $FTM_Tabs;\n\n\tbutton -e -en 1 $FTM_CopyButton;\n\tbutton -e -en 1 $FTM_MoveButton;\n\tbutton -e -en 1 $FTM_SetButton;\n\n\tglobal string $FTM_WorkSpace;\n\t$FTM_WorkSpace = `workspace -q -rd` + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\t$FTM_WorkSpace = `FTM_GetPath \"path\" $FTM_WorkSpace`;\n\n\tselect -cl;\n\twaitCursor -state off;\n}\n\nglobal proc FTM_Function (string $FTM_Function, string $FTM_OptionColumn)\n{\n\tglobal string $lsCmd;\n\tstring $FTM_SelectedFiles[] = eval($lsCmd + \" -sl\");\n\tif (`FTM_SelCheck $FTM_SelectedFiles`)\n\t{\n\t\twaitCursor -state on;\n\t\tFTM_Log \"start\" \"\" \"\";\n\t\tint $wrong = 0;\n\t\tint $FTM_OperationMode = `radioButtonGrp -q -select ($FTM_OptionColumn + \"|FTM_OperationMode\")`;\n\n\n\t\tstring $FTM_SourceDirectory;\n\n\n\t\tstring $FTM_TargetDirectory = `textFieldButtonGrp -q -text ($FTM_OptionColumn + \"|FTM_TargetDirectoryField\")`;\n\t\t$FTM_TargetDirectory = `FTM_GetPath \"path\" $FTM_TargetDirectory`;\n\n\t\tif ( `checkBoxGrp -q -v1 ($FTM_OptionColumn + \"|FTM_MakeFolderChecker\")` )\n\t\t{\n\t\t\tstring $FTM_NewFolderName = `textFieldGrp -q -text ($FTM_OptionColumn + \"|FTM_NewFolderNameField\")`;\n\t\t\t$FTM_TargetDirectory = $FTM_TargetDirectory + $FTM_NewFolderName;\n\t\t\tif (!`file -q -ex $FTM_TargetDirectory`) {\n\t\t\t\tif (`sysFile -md $FTM_TargetDirectory`)\n\t\t\t\t\tFTM_Log \"\" (\"Folder created: \\\"\" + (toNativePath($FTM_TargetDirectory)) + \"\\\".\") \"\";\n\t\t\t\telse {\n\t\t\t\t\t$wrong = 1;\n\t\t\t\t\tFTM_Log \"\" (\"Folder can not be created: \" + (toNativePath($FTM_TargetDirectory)) + \"\\\".\") \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!`filetest -w $FTM_TargetDirectory`) {\n\t\t\t\t\t$wrong = 1;\n\t\t\t\t\tFTM_Log \"\" (\"Folder exists but is not writeable: \" + (toNativePath($FTM_TargetDirectory)) + \"\\\".\") \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$FTM_TargetDirectory = `FTM_GetPath \"path\" $FTM_TargetDirectory`;\n\t\t}\n\n\t\tif (!$wrong) {\n\n\t\t\tstring $FTM_FunctionCmd;\n\t\t\tif ($FTM_Function == \"Copy\")\n\t\t\t\t$FTM_FunctionCmd = \"sysFile -cp \";\n\t\t\telse if ($FTM_Function == \"Move\")\n\t\t\t\t$FTM_FunctionCmd = \"sysFile -mov \";\n\n\n\t\t\tint $progress = 0;\n\t\t\tint $percentage = 0;\n\t\t\tprogressWindow -t \"FTM Working...\" -pr $progress -ii 1 -min 0 -max `size $FTM_SelectedFiles`;\n\n\n\t\t\tfor ($FTM_SelectedFile in $FTM_SelectedFiles)\n\t\t\t{\n\t\t\t\tFTM_Log \"\" ($FTM_SelectedFile+\":\") \"\";\n\t\t\t\tif ( `progressWindow -q -ic` ){\n\t\t\t\t\tFTM_Log \"\" \"User cancelled.\" \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$wrong = 0;\n\n\t\t\t\t\t\t\t\t$progress += 1;\n\t\t\t\t$percentage = $progress * (100/size($FTM_SelectedFiles));\n\t\t\t\tprogressWindow -e -pr $progress -st (\"Handling \" + $FTM_SelectedFile + \"     ......  \" + $percentage + \"%\");\n\n\n\t\t\t\tstring $FTM_CurrentFile = `getAttr ($FTM_SelectedFile + \".fileTextureName\")`;\n\t\t\t\tstring $FTM_SourceFile[] = `FTM_GetFile $FTM_CurrentFile`;\n\t\t\t\tstring $FTM_OriginSourceFile = $FTM_SourceFile[1];\n\n\n\t\t\t\tif (size($FTM_OriginSourceFile) == 0)\n\t\t\t\t\tFTM_Log \"\" \"\" \"WARNING: File texture is not specified.\";\n\n\t\t\t\telse\n\t\t\t\t{\n\n\t\t\t\t\tif ( `checkBoxGrp -q -v1 ($FTM_OptionColumn + \"|FTM_ReplaceStringChecker\")` )\n\t\t\t\t\t{\n\t\t\t\t\t\tstring $FTM_OldString = `textFieldGrp -q -tx ($FTM_OptionColumn + \"|FTM_OldStringField\")`;\n\t\t\t\t\t\tstring $badChar[] = {\"+\",\".\",\"^\",\"$\",\"[\",\"]\",\"(\",\")\"};\n\t\t\t\t\t\t\tfor ($char in $badChar)\n\t\t\t\t\t\t\t\t$FTM_OldString = `substituteAllString $FTM_OldString $char (\"\\\\\"+$char)`;\n\t\t\t\t\t\tstring $FTM_MatchExpression = \"(\" + $FTM_OldString + \")+\";\n\t\t\t\t\t\tstring $FTM_NewString = `textFieldGrp -q -tx ($FTM_OptionColumn + \"|FTM_NewStringField\")`;\n\t\t\t\t\t\tfor ($i=0; $i<size($FTM_SourceFile[1]); $i++)\n\t\t\t\t\t\t\t$FTM_SourceFile[1] = `substitute $FTM_MatchExpression $FTM_SourceFile[1] $FTM_NewString`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstring $FTM_Prefix;\n\t\t\t\t\tstring $FTM_Suffix;\n\t\t\t\t\tstring $FTM_SourceFileRegularName[] = `FTM_FCFileRegularName $FTM_SourceFile[1]`;\n\n\t\t\t\t\tif ( `checkBox -q -v ($FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_AddPrefixChecker\")` )\n\t\t\t\t\t\t$FTM_Prefix = `textField -q -tx ($FTM_OptionColumn + \"|FTM_AddPrefixRow|FTM_PrefixField\")`;\n\n\t\t\t\t\tif ( `checkBox -q -v ($FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_AddSuffixChecker\")` )\n\t\t\t\t\t\t$FTM_Suffix = `textField -q -tx ($FTM_OptionColumn + \"|FTM_AddSuffixRow|FTM_SuffixField\")`;\n\n\n\t\t\t\t\tif (size($FTM_SourceFileRegularName[1]))\n\t\t\t\t\t\t$FTM_SourceFileRegularName[1] = \".\" + $FTM_SourceFileRegularName[1];\n\t\t\t\t\tif (size($FTM_SourceFileRegularName[2]))\n\t\t\t\t\t\t$FTM_SourceFileRegularName[2] = \".\" + $FTM_SourceFileRegularName[2];\n\t\t\t\t\t$FTM_SourceFile[1] = $FTM_Prefix + $FTM_SourceFileRegularName[0] + $FTM_Suffix + $FTM_SourceFileRegularName[1] + $FTM_SourceFileRegularName[2];\n\n\n\t\t\t\t\tstring $FTM_FinalCmd;\n\t\t\t\t\tstring $FTM_FunctionResult;\n\t\t\t\t\tint $setWrong = 0;\n\t\t\t\t\tif ($FTM_Function != \"Set\")\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($FTM_OperationMode == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$FTM_FinalCmd = $FTM_FunctionCmd + \"\\\"\" + `substituteAll \"\\\\\\\\\" ($FTM_TargetDirectory + $FTM_SourceFile[1]) \"/\"` + \"\\\" \\\"\" + `substituteAll \"\\\\\\\\\" $FTM_SourceFile[0] \"/\"` + \"\\\"\";\n\t\t\t\t\t\t\t$FTM_FunctionResult = $FTM_Function + \" \\\"\" + `toNativePath $FTM_SourceFile[0]` + \"\\\" to \\\"\" + `toNativePath ($FTM_TargetDirectory + $FTM_SourceFile[1])` + \"\\\". \";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($FTM_OperationMode == 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$FTM_SourceDirectory = `textFieldButtonGrp -q -text ($FTM_OptionColumn + \"|FTM_SourceDirectoryField\")`;\n\t\t\t\t\t\t\t$FTM_SourceDirectory = `FTM_GetPath \"path\" $FTM_SourceDirectory`;\n\t\t\t\t\t\t\t$FTM_FinalCmd = $FTM_FunctionCmd + \"\\\"\" + `substituteAll \"\\\\\\\\\" ($FTM_TargetDirectory + $FTM_SourceFile[1]) \"/\"` + \"\\\" \\\"\" + `substituteAll \"\\\\\\\\\" ($FTM_SourceDirectory + $FTM_OriginSourceFile) \"/\"` + \"\\\"\";\n\t\t\t\t\t\t\t$FTM_FunctionResult = $FTM_Function + \" \\\"\" + `toNativePath ($FTM_SourceDirectory + $FTM_OriginSourceFile)` + \"\\\" to \\\"\" + `toNativePath ($FTM_TargetDirectory + $FTM_SourceFile[1])` + \"\\\". \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ($FTM_Function == \"Set\")\n\t\t\t\t\t{\n\t\t\t\t\t\tstring $path = `substituteAll \"\\\\\\\\\" ($FTM_TargetDirectory + $FTM_SourceFile[1]) \"/\"`;\n\t\t\t\t\t\tstring $cmd = \"setAttr -typ \\\"string\\\" \" + $FTM_SelectedFile + \".fileTextureName \\\"\" + $path + \"\\\"\";\n\t\t\t\t\t\tif (catchQuiet(eval($cmd))) {\n\t\t\t\t\t\t\t$FTM_FunctionResult = \"Attribute \\\"fileTextureName\\\" is locked/connected and can NOT be modified!\";\n\t\t\t\t\t\t\t$setWrong = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$FTM_FunctionResult = \"Set to \\\"\" + `toNativePath ($FTM_TargetDirectory + $FTM_SourceFile[1])` + \"\\\". \";\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ($FTM_Function != \"Set\") {\n\t\t\t\t\t\tif (!eval($FTM_FinalCmd)) {\n\t\t\t\t\t\t\t$wrong = 1;\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"WARNING: \" + $FTM_Function + \" can NOT be done, could be permission issue or path existence issue.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!$wrong) {\n\n\t\t\t\t\t\tif ( `file -q -ex ($FTM_TargetDirectory + $FTM_SourceFile[1])` )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($FTM_Function == \"Move\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( `file -q -ex $FTM_SourceFile[0]` || `file -q -ex ($FTM_SourceDirectory + $FTM_OriginSourceFile)`)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"Succeed: \" + $FTM_FunctionResult + \" But the original file is not removed. Check the HELP for possible reasons.\";\n\t\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" (\"WARNING: \" + $FTM_FunctionResult);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"Succeed: \" + $FTM_FunctionResult;\n\t\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" $FTM_FunctionResult;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"Succeed: \" + $FTM_FunctionResult;\n\t\t\t\t\t\t\t\tFTM_Log \"\" \"\" $FTM_FunctionResult;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($FTM_Function == \"Set\") {\n\t\t\t\t\t\t\t\tif ($setWrong)\n\t\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"WARNING: \" + $FTM_FunctionResult;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"Succeed: \" + $FTM_FunctionResult + \"But destination does NOT exist.\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($FTM_Function != \"Set\")\n\t\t\t\t\t\t\t\t$FTM_FunctionResult = \"Fail: \" + $FTM_FunctionResult + \"Check Help tab for possible reasons.\";\n\t\t\t\t\t\t\tFTM_Log \"\" \"\" $FTM_FunctionResult;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tprogressWindow -ep;\n\t\tFTM_Log \"end\" \"\" \"\";\n\t\tFTM_END;\n\t\twaitCursor -state off;\n\t}\n}\n\n\n//////构建主UI//////\n\n\nglobal proc FileTextureManager ()\n{\n\n//版本检查\nfloat $verCut = 2010;\nglobal int $FTM_NEW_MAYA, $FTM_WIDTH, $FTM_HEIGHT;\n$FTM_NEW_MAYA = 0;\n$FTM_WIDTH = 380;\n$FTM_HEIGHT = 600;\n\nstring $verString = `about -v`;\nstring $verString_tmp[];\ntokenize $verString \" \" $verString_tmp;\nfloat $verNum = $verString_tmp[0];\nif ($verNum > $verCut) { \n\tglobal int $FTM_NEW_MAYA, $FTM_WIDTH, $FTM_HEIGHT;\n\t$FTM_NEW_MAYA = 1;\n\t$FTM_WIDTH = 520;  //宽度\n\t$FTM_HEIGHT = 700; //高度\n}\nglobal string $FTM_FCAllFormats[];\n$FTM_FCAllFormats = {\"iff\",\"sgi\",\"tga\",\"rgb\",\"jpg\",\"jpeg\",\"map\",\"tif\",\"tiff\",\"bmp\",\"bw\",\"icon\",\"cin\",\"pic\",\"yuv\",\"als\",\"gif\",\"lff\",\"pxb\",\"scn\",\"ppm\",\"pri\",\"qtl\",\"vst\",\"rla\"};\n\nglobal string $lsCmd;\n$lsCmd = \"ls -typ file -typ psdFileTex \";\n\nselect -cl;\n\nglobal string $FTM_MayaWorkSpace;\n$FTM_MayaWorkSpace = `workspace -q -dir`;\nglobal string $FTM_WorkSpace = \"\";\n\n//确保窗口显示的大小正确\nwindowPref -enableAll false;\n//如果UI退出,请将其删除\nif (`window -exists FTM_MainWindow`)\n\tdeleteUI FTM_MainWindow;\n//建立一个新的用户界面\nglobal int $FTM_WIDTH, $FTM_HEIGHT;\nwindow -title \"File Texture Manager\" -wh $FTM_WIDTH $FTM_HEIGHT -tlc 200 200 -ret FTM_MainWindow;\n\tstring $FTM_MainForm = `formLayout`;\n\t\tstring $FTM_Tabs = `tabLayout -imw 0 -imh 0`;\n//选项选项卡\n\t\tstring $FTM_OptionForm = `formLayout`;\n\t\t\tstring $FTM_OptionScroll = `scrollLayout -cr true`;\n\t\t\tstring $FTM_OptionColumn = `columnLayout -adj 1 -rs 5`;\n//分析区域\n\t\t\t\tformLayout -nd 100 FTM_AnalyseForm;\n\t\t\t\t\t\tstring $FTM_AnalyseColumn = `columnLayout -cat both 30 -adj 1 -rs 5`;\n\t\t\t\t\t\t\tbutton -l \"分析场景文件纹理\" -h 40 -w 250 FTM_AnalyseButton;\n\t\t\t\t\t\t\ttext -l \"\" -h 5;\n\t\t\t\t\t\t\ttext -l \"选择要管理的文件(多选)\";\n\t\t\t\t\t\tstring $FTM_AnalysisScroll = `scrollLayout -p FTM_AnalyseForm`;\n\t\t\t\t\t\t\tstring $FTM_AnalysisColumn = `columnLayout -cat left 15`;\n\t\t\t\t\t\t\t\ttext -l \"未分析场景文件\" FTM_EmptyAnalysisText;\n\t\t\t\t\t\t\tbutton -e -c (\"FTM_AnalyseFileTextures \" + $FTM_AnalysisColumn) ($FTM_AnalyseColumn + \"|FTM_AnalyseButton\");\n\t\t\t\tformLayout -e\n\t\t\t\t\t-af $FTM_AnalyseColumn left 0\n\t\t\t\t\t-af $FTM_AnalyseColumn right 0\n\t\t\t\t\t-af $FTM_AnalyseColumn top 5\n\t\t\t\t\t-af $FTM_AnalyseColumn bottom 200\n\t\t\t\t\t-ac $FTM_AnalysisScroll top 5 $FTM_AnalyseColumn\n\t\t\t\t\t-af $FTM_AnalysisScroll bottom 0\n\t\t\t\t\t-af $FTM_AnalysisScroll left 0\n\t\t\t\t\t-af $FTM_AnalysisScroll right 0\n\t\t\t\t\t($FTM_OptionColumn + \"|FTM_AnalyseForm\");\n\t\t\tsetParent $FTM_OptionColumn;\n\t\t\t\tseparator -style \"in\" -h 10;\n//操作模式\n\t\t\t\tradioButtonGrp -l \"工作模式    \" -la2 \"自动\" \"手动\" -nrb 2 -select 1 -cl3 right left left -cw3 120 100 100 FTM_OperationMode;\n\n\t\t\t\tseparator -style \"in\" -h 5;\n\n//设置源目录区域\n\t\t\t\ttextFieldButtonGrp -label \"源目录\" -text \"\" -buttonLabel \"浏览\" -adj 2 -en 0 -cw 1 120 -cw 3 60 -cl3 right left center FTM_SourceDirectoryField;\n\n\t\t\t\tseparator -style \"in\" -h 5;\n\n//设置目标目录区域\n\t\t\t\tstring $FTM_CurrentProject = `workspace -q -rd`;\n\t\t\t\tstring $FTM_CurrentSourceImagesDir = $FTM_CurrentProject + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\t\t\t\tstring $FTM_SourceImages = `FTM_GetPath \"path\" $FTM_CurrentSourceImagesDir`;\n\t\t\t\ttextFieldButtonGrp -label \"目标目录： \" -text $FTM_SourceImages -buttonLabel \"浏览\" -adj 2 -cw 1 120 -cw 3 60 -cl3 right left center FTM_TargetDirectoryField;\n//创建新文件夹区域\n\t\t\t\tcheckBoxGrp -ncb 1 -l1 \"在目标目录下创建新文件夹\" -adj 1 -v1 0 -cat 1 left 101 FTM_MakeFolderChecker;\n\t\t\t\ttextFieldGrp -label \"文件夹名称\" -text \"TextureFiles\" -en 0 -cw2 120 180 -cl2 right left FTM_NewFolderNameField;\n\t\t\t\ttext -al center -l \"FINAL目标目录将等于目标目录\";\n\t\t\t\ttext -al center -l \"加上新文件夹（如果用户决定创建新文件夹）\";\n\t\t\t\tseparator -style \"in\" -h 5;\n//更新纹理文件区域\n\t\t\t\trowLayout -nc 2 -cw 1 120 -cat 1 right 0 -cl2 left left FTM_AddPrefixRow;\n\t\t\t\t\tcheckBox -l \"添加前缀\" -v 0 FTM_AddPrefixChecker;\n\t\t\t\t\ttextField -tx \"prefix_\" -en 0 -w 150 FTM_PrefixField;\n\t\t\tsetParent $FTM_OptionColumn;\n\t\t\t\trowLayout -nc 2 -cw 1 120 -cat 1 right 0 -cl2 left left FTM_AddSuffixRow;\n\t\t\t\t\tcheckBox -l \"添加后缀\" -v 0 FTM_AddSuffixChecker;\n\t\t\t\t\ttextField -tx \"_suffix\" -en 0 -w 150 FTM_SuffixField;\n\t\t\tsetParent $FTM_OptionColumn;\n\t\t\t\tcheckBoxGrp -ncb 1 -l1 \"替换字符串\" -adj 1 -v1 0 -cat 1 left 101 FTM_ReplaceStringChecker;\n\t\t\t\ttextFieldGrp -l \"旧名称：\" -tx \"Old String\" -en 0 -cw2 120 150 -cl2 right left FTM_OldStringField;\n\t\t\t\ttextFieldGrp -l \"新名称：\" -tx \"New String\" -en 0 -cw2 120 150 -cl2 right left FTM_NewStringField;\n\t\tformLayout -e\n\t\t\t-af $FTM_OptionScroll top 5\n\t\t\t-af $FTM_OptionScroll left 0\n\t\t\t-af $FTM_OptionScroll right 0\n\t\t\t-af $FTM_OptionScroll bottom 0\n\t\t\t$FTM_OptionForm;\n\t\tsetParent $FTM_Tabs;\n//附加功能选项卡\n\t\t\tstring $FTM_ExtraFunctionScroll = `scrollLayout -cr true`;\n\t\t\tstring $FTM_ExtraFunctionColumn = `columnLayout -cat both 15 -adj 1 -rs 5`;\n\t\t\t\t//替换路径根区域\n\t\t\t\tseparator -style \"none\" -h 5;\n\t\t\t\ttext -fn \"boldLabelFont\" -al left -l \"替换根路径\";\n\t\t\t\ttextFieldButtonGrp -l \"根路径\" -text \"\" -buttonLabel \"浏览\" -adj 2 -en 1 -cw 1 80 -cw 3 60 -cl3 right left center oldRootField;\n\t\t\t\ttextFieldButtonGrp -e -bc (\"FTM_BrowseCmd \\\"path\\\" \" + $FTM_ExtraFunctionColumn + \"|oldRootField \\\"Choose old root\\\" 4\") ($FTM_ExtraFunctionColumn + \"|oldRootField\");\n\t\t\t\tstring $tmp = `workspace -q -rd` + `workspace -q -fileRuleEntry \"sourceImages\"`;\n\t\t\t\t$tmp = `FTM_GetPath \"path\" $tmp`;\n\t\t\t\ttextFieldButtonGrp -l \"新路径\" -text $tmp -buttonLabel \"浏览\" -adj 2 -en 1 -cw 1 80 -cw 3 60 -cl3 right left center newRootField;\n\t\t\t\ttextFieldButtonGrp -e -bc (\"FTM_BrowseCmd \\\"path\\\" \" + $FTM_ExtraFunctionColumn + \"|newRootField \\\"Choose new root\\\" 4\") ($FTM_ExtraFunctionColumn + \"|newRootField\");\n\t\t\t\tbutton -h 25 -l \"替换\" -c (\"FTM_Substitute \" + $FTM_ExtraFunctionColumn + \"|oldRootField \" + $FTM_ExtraFunctionColumn + \"|newRootField\");\n\t\t\t\t\n\t\t\t\tseparator -style \"in\" -h 10;\n\t\t\t\ttext -fn \"boldLabelFont\" -al left -l \"内存效率 (仅限Maya“文件”节点)\";\n\t\t\t\t//text-fn“boldLabelFont”-al left-l“BOT设置(仅限Maya软件渲染器)”；\n\t\t\t\ttext -al left -l \"\\\"BOT\\\" 设置(仅限Maya软件渲染器)\";\n\t\t\t\trowLayout -nc 3 -adj 3\n\t\t\t\t\t\t-cw 1 170 -cw 2 2 -cal 3 center\n\t\t\t\t\t\t-cat 1 both 0 -cat 3 both 0\n\t\t\t\t\t\t-rat 1 bottom 0 -rat 2 bottom 0 -rat 3 bottom 0\n\t\t\t\t\t\tFTM_BOTRow;\n\t\t\t\t\tintFieldGrp -nf 1 -adj 2 -cw 1 50 -cat 1 left 0 -cat 2 both 5 -l \"阈值\" -el \"\" -v1 1024 FTM_BOTResFieldGrp;\n\t\t\t\t\ttext -l \"\";\n\t\t\t\t\tbutton -h 25 -l \"设置 BOT\" -c (\"FTM_BOTSetup 1 \" + $FTM_ExtraFunctionColumn);\n\t\t\t\tsetParent ..;\n\t\t\t\tbutton -h 25 -l \"取消设置 BOT\" -c (\"FTM_BOTSetup 0 \" + $FTM_ExtraFunctionColumn);\n\t\t\t\ttext -al left -l \"\\\".map\\\" 设置（仅限mental ray）\";\n\t\t\t\trowLayout -nc 3 -adj 3\n\t\t\t\t\t\t-cw 1 170 -cw 2 2 -cal 3 center\n\t\t\t\t\t\t-cat 1 both 0 -cat 3 both 0\n\t\t\t\t\t\t-rat 1 bottom 0 -rat 2 bottom 0 -rat 3 bottom 0\n\t\t\t\t\t\tFTM_MAPRow;\n\t\t\t\t\tintFieldGrp -nf 1 -adj 2 -cw 1 50 -cat 1 left 0 -cat 2 both 5 -l \"阈值\" -el \"\" -v1 1024 FTM_MAPResFieldGrp;\n\t\t\t\t\ttext -l \"\";\n\t\t\t\t\tbutton -h 25 -l \"设置 .map\" -c (\"FTM_MAPSetup 1 \" + $FTM_ExtraFunctionColumn);\n\t\t\t\tsetParent ..;\n\t\t\t\tbutton -h 25 -l \"取消设置 .map\" -c (\"FTM_MAPSetup 0 \" + $FTM_ExtraFunctionColumn);\n\t\t\t\t// Filter setup area\n\t\t\t\tseparator -style \"in\" -h 10;\n\t\t\t\ttext -fn \"boldLabelFont\" -al left -l \"过滤器设置（仅限Maya的“文件”/“sdFileTex”节点）\";\n\t\t\t\trowLayout -nc 2 -cw 1 120 -cat 2 left 30 -adj 2 -cal 2 center -rat 1 bottom 0 FTM_FilterTypeRow;\n\t\t\t\t\toptionMenu -l \"过滤器类型\" FTM_FilterTypeMenu;\n\t\t\t\t\t\t\tmenuItem -label \"Off\";\n\t\t\t\t\t\t\tmenuItem -label \"Mipmap\";\n\t\t\t\t\t\t\tmenuItem -label \"Box\";\n\t\t\t\t\t\t\tmenuItem -label \"Quadratic\";\n\t\t\t\t\t\t\tmenuItem -label \"Quartic\";\n\t\t\t\t\t\t\tmenuItem -label \"Gaussian\";\n\t\t\t\t\toptionMenu -e -v \"Mipmap\" ($FTM_ExtraFunctionColumn + \"|FTM_FilterTypeRow|FTM_FilterTypeMenu\");\n\t\t\t\t\tbutton -h 25 -l \"设置过滤器类型 \" -c (\"FTM_FilterSetup \" + $FTM_ExtraFunctionColumn);\n\t\t\t\tsetParent ..;\n\t\t\t\t// Format conversion area\n\t\t\t\tseparator -style \"in\" -h 10;\n\t\t\t\ttext -fn \"boldLabelFont\" -al left -l \"纹理文件格式转换\";\n\t\t\t\trowLayout -nc 3\t-cw 1 80 -cw 3 80 -cat 1 left 0 -cat 2 left 10 -cat 3 left 10 -adj 2 -cal 2 center FTM_FCRow;\n\t\t\t\t\toptionMenu -l \"源：\" FTM_FCSourceMenu;\n\t\t\t\t\t\tmenuItem -label \"\\*\";\n\t\t\t\t\t\tglobal string $FTM_FCAllFormats[];\n\t\t\t\t\t\tfor ($i=0;$i<size($FTM_FCAllFormats);$i++)\n\t\t\t\t\t\t\tmenuItem -label $FTM_FCAllFormats[$i];\n\t\t\t\t\tbutton -h 25 -l \"选择匹配项\" -c (\"select -r `FTM_FCGetMatches \\\"\" + $FTM_ExtraFunctionColumn + \"|FTM_FCRow|FTM_FCSourceMenu\\\"`;\");\n\t\t\t\t\toptionMenu -l \"转换\" FTM_FCTargetMenu;\n\t\t\t\t\t\tfor ($i=0;$i<size($FTM_FCAllFormats);$i++)\n\t\t\t\t\t\t\tmenuItem -label $FTM_FCAllFormats[$i];\n\t\t\t\tsetParent ..;\n\t\t\t\tcheckBox -l \"处理序列纹理。\" -al \"left\" -v 0 FTM_SeqCheck;\n\t\t\t\tcheckBox -l \"更新路径信息。\" -al \"left\" -v 1 FTM_UpdateCheck;\n\t\t\t\tcheckBox -l \"删除原始纹理。小心使用！\" -al \"left\" -v 0 -en 1 FTM_RemoveCheck;\n\t\t\t\tcheckBox -e -onc (\"checkBox -e -en 1 \" + $FTM_ExtraFunctionColumn + \"|FTM_RemoveCheck\")\n\t\t\t\t\t\t\t-ofc (\"checkBox -e -en 0 \" + $FTM_ExtraFunctionColumn + \"|FTM_RemoveCheck\")\n\t\t\t\t\t\t\t($FTM_ExtraFunctionColumn + \"|FTM_UpdateCheck\");\n\t\t\t\tbutton -l \"转换\" -h 25 -c (\"FTM_FCGatherInfo \" + $FTM_ExtraFunctionColumn);\n\t\tsetParent $FTM_Tabs;\n//“帮助”选项卡\n\t\t\tstring $FTM_HelpForm = `formLayout`;\n//描述区域\n\t\t\t\tscrollField -ww true -editable false FTM_HelpField;\n//关于文件纹理管理器\n\t\t\tsetParent $FTM_HelpForm;\n\t\t\t\tglobal int $FTM_NEW_MAYA;\n\t\t\t\tstring $FTM_AboutFrame;\n\t\t\t\tif ($FTM_NEW_MAYA) $FTM_AboutFrame = `frameLayout -l \"关于 FileTextureManager\" -fn boldLabelFont -cll 0 -bv true  -li 5`;\n\t\t\t\telse $FTM_AboutFrame = `frameLayout -l \"关于 FileTextureManager\" -la top -fn boldLabelFont -cll 0 -bv true  -li 5`;\n\t\t\t\tstring $FTM_AboutForm = `formLayout`;\n\t\t\t\t\tstring $FTM_AboutTextLeft = `text -l \"脚本名称 :\\n更新时间 :\\n作者 :\\n汉化 :\\n邮箱 :\\n\\n保留所有权\" -al left`;\n\t\t\t\t\tstring $FTM_AboutTextRight = `text -l \"FileTextureManager.mel\\nMay, 2011\\n叶(叶峰)\\n三岁豆Er\\nCrow.Yeh@gmail.com\" -al left`;\n\t\t\t\tformLayout -e\n\t\t\t\t\t-af $FTM_AboutTextLeft left 10\n\t\t\t\t\t-af $FTM_AboutTextLeft top 5\n\t\t\t\t\t-an $FTM_AboutTextLeft right\n\t\t\t\t\t-af $FTM_AboutTextLeft bottom 5\n\t\t\t\t\t-ac $FTM_AboutTextRight left 10 $FTM_AboutTextLeft\n\t\t\t\t\t-af $FTM_AboutTextRight top 5\n\t\t\t\t\t-an $FTM_AboutTextRight right\n\t\t\t\t\t-an $FTM_AboutTextRight bottom\n\t\t\t\t\t$FTM_AboutForm;\n\t\t\tformLayout -e\n\t\t\t\t-ac FTM_HelpField bottom 5 $FTM_AboutFrame\n\t\t\t\t-af FTM_HelpField top 5\n\t\t\t\t-af FTM_HelpField left 0\n\t\t\t\t-af FTM_HelpField right 0\n\t\t\t\t-an $FTM_AboutFrame top\n\t\t\t\t-af $FTM_AboutFrame left 0\n\t\t\t\t-af $FTM_AboutFrame right 0\n\t\t\t\t-af $FTM_AboutFrame bottom 0\n\t\t\t\t$FTM_HelpForm;\n//Function form.\n\tsetParent $FTM_MainForm;\n\t\tstring $FTM_FunctionForm = `formLayout -h 30 -numberOfDivisions 100`;\n\t\t\tstring $FTM_CopyButton = `button -l \"复制\"\n\t\t\t\t\t\t\t-c (\"FTM_Function \\\"Copy\\\" \" + $FTM_OptionColumn)`;\n\t\t\tstring $FTM_MoveButton = `button -l \"剪切\"\n\t\t\t\t\t\t\t-c (\"FTM_Function \\\"Move\\\" \" + $FTM_OptionColumn)`;\n\t\t\tstring $FTM_SetButton = `button -l \"指定\"\n\t\t\t\t\t\t\t-c (\"FTM_Function \\\"Set\\\" \" + $FTM_OptionColumn)`;\n\t\t\tstring $FTM_ResetButton = `button -l \"重置\" -c (\"FTM_ResetUI \"+$FTM_OptionColumn+\" \"+$FTM_AnalysisColumn+\" \"+$FTM_ExtraFunctionColumn+\" \"+$FTM_Tabs+\" \"+$FTM_CopyButton+\" \"+$FTM_MoveButton+\" \"+$FTM_SetButton)`;\n\t\t\tstring $FTM_CloseButton = `button -l \"退出\"\n\t\t\t\t\t\t\t-c (\"deleteUI FTM_MainWindow; select -cl;global string $FTM_MayaWorkSpace; workspace -dir $FTM_MayaWorkSpace;\")`;\n\t\tformLayout -e\n\t\t\t-ap $FTM_CopyButton right 1 20\n\t\t\t-af $FTM_CopyButton top 0\n\t\t\t-af $FTM_CopyButton left 0\n\t\t\t-af $FTM_CopyButton bottom 0\n\t\t\t-ap $FTM_MoveButton left 1 20\n\t\t\t-ap $FTM_MoveButton right 1 40\n\t\t\t-af $FTM_MoveButton top 0\n\t\t\t-af $FTM_MoveButton bottom 0\n\t\t\t-ap $FTM_SetButton left 1 40\n\t\t\t-ap $FTM_SetButton right 1 60\n\t\t\t-af $FTM_SetButton top 0\n\t\t\t-af $FTM_SetButton bottom 0\n\t\t\t-af $FTM_ResetButton top 0\n\t\t\t-af $FTM_ResetButton bottom 0\n\t\t\t-ap $FTM_ResetButton left 1 60\n\t\t\t-ap $FTM_ResetButton right 1 80\n\t\t\t-ap $FTM_CloseButton left 1 80\n\t\t\t-af $FTM_CloseButton top 0\n\t\t\t-af $FTM_CloseButton right 0\n\t\t\t-af $FTM_CloseButton bottom 0\n\t\t\t$FTM_FunctionForm;\n\tformLayout -e\n\t\t-af $FTM_Tabs top 0\n\t\t-af $FTM_Tabs left 0\n\t\t-af $FTM_Tabs right 0\n\t\t-ac $FTM_Tabs bottom 3 $FTM_FunctionForm\n\t\t-af $FTM_FunctionForm left 0\n\t\t-af $FTM_FunctionForm right 0\n\t\t-af $FTM_FunctionForm bottom 0\n\t\t-an $FTM_FunctionForm top\n\t\t$FTM_MainForm;\n\nFTM_EditUIControl $FTM_OptionColumn $FTM_HelpForm;\n\n\nstring $tabCC = \"button -e -en 0 \" + $FTM_CopyButton + \";\";\n$tabCC += \"button -e -en 0 \" + $FTM_MoveButton + \";\";\n$tabCC += \"button -e -en 0 \" + $FTM_SetButton + \";\";\n$tabCC += \"if (`tabLayout -q -sti \" + $FTM_Tabs + \"` == 1) {\";\n$tabCC += \"button -e -en 1 \" + $FTM_CopyButton + \";\";\n$tabCC += \"button -e -en 1 \" + $FTM_MoveButton + \";\";\n$tabCC += \"button -e -en 1 \" + $FTM_SetButton + \";\";\n$tabCC += \"}\";\n\ntabLayout -e -tl $FTM_OptionForm \"基本功能\" -tl $FTM_ExtraFunctionScroll \"附加功能\" -tl $FTM_HelpForm \"帮助\" -psc $tabCC $FTM_Tabs;\nshowWindow FTM_MainWindow;\n//确保其他窗口将以适当的大小显示\nwindowPref -enableAll true;\n}\n\nFileTextureManager;\n\n//////////////////////////////////End//////////////////////////////////" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "打开文件路径编辑器" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "打开文件路径编辑器" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "fileOpen.png" 
        -image1 "fileOpen.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "FilePathEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Vray 阴影层添加移除工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Vray阴影层设置" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "teapot.png" 
        -image1 "teapot.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Vray 阴影层添加移除工具//\n// 作者：三岁豆 , 创建日期 2023.05.28//\n// 2023.11.01 更新了Vray采样器类型//\n// 修改Window名称为 WindowSDWS//\n//解决重新声明变量报错问题//\n// 升级版本V6.0 //\n//定义创建阴影层并设置参数//\nproc YY()\n{\n    createNode \"VRayObjectProperties\" -n \"vrayobjectproperties\";\n    setAttr \"vrayobjectproperties.alphaContribution\" -1;\n    setAttr \"vrayobjectproperties.affectAlpha\" 1;\n    setAttr \"vrayobjectproperties.shadows\" 1;\n    setAttr \"vrayobjectproperties.matteSurface\" 1;\n    setAttr \"vrayobjectproperties.matteForSecondaryRays\" 1;\n    print (\"阴影层创建成功！\"+\"\\n\");\n}\n\nproc Buckets()\n{\n    setAttr \"vraySettings.samplerType\" 4;\n\tprint (\" Buckets 设置成功\"+\"\\n\");\n}\nproc Progressives()\n{\n    setAttr \"vraySettings.samplerType\" 3;\n    print (\" Progressive 设置成功\"+\"\\n\");\n}\n\nstring $WindowSDWS = \"WindowSDWS\";\nif (`window -ex $WindowSDWS`)\n{\n    deleteUI -window $WindowSDWS;\n}\n\nstring $windowsdw = `window -title \"三岁豆Er\"\n       -sizeable 0\n       $WindowSDWS`;\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 230;\n      text  -h 50  -label\"Vray 阴影层添加移除工具\";\n       button -label \"添加\" -command \"sets -edit -forceElement  vrayobjectproperties\";\n       button -label \"移除\" -command \"sets -edit -rm  vrayobjectproperties;\";\n       button -label \"创建阴影层\" -command \"YY\";\n       separator -h 2;\n       button -label \"Bucket\" -bgc 0.9  0.7 0.2 -command \"Buckets\";\n       button -label \"Progressive\" -bgc 0.6  0.7 0.2 -command \"Progressives\";\n       text  -h 5 -label\"\";\nsetParent ..;\nshowWindow $WindowSDWS;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "贴图设置工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "贴图设置工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "envSky.svg" 
        -image1 "envSky.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//贴图设置工具//\n// 作者：三岁豆 , 创建日期 2023.06.07 //\n\n\n////////////忽略所有贴图色彩空间规则///////////////\nproc Ignoreall(){ \n        string $FileJD[]=`ls -type file`;\n        for ($one in $FileJD){\n        setAttr ($one+\".ignoreColorSpaceFileRules\") 1;\n        print (\"所有贴图忽略颜色空间规则成功\"+\"\\n\");\n        }\n}\n\n\n////////////OpenSubdiv 保留边和角///////////////\nproc OpenSubdivT(){ \n        string $Subdiv[0] = `ls -sl -dag -type shape`;\n        for ($one in $Subdiv)\n        if(`objExists ($one+\".osdFvarBoundary\")`)\n        {setAttr ($one+\".osdFvarBoundary\") 1;}\n        print (\"已将UV平滑模式设置为保留边和角\"+\"\\n\");\n}\n////////////设置格式为 sRGB 忽略规则///////////////\nproc BsRGB(){\n        string $sRGBsel[] = `ls -sl`;\n        for($i=0; $i<`size($sRGBsel)`; $i++)\n        {\n           setAttr  -type \"string\" ($sRGBsel[$i] + \".colorSpace\")\"sRGB\"; \n           setAttr ($sRGBsel[$i]+ \".ignoreColorSpaceFileRules\") 1;\n           print (\"  Utility - sRGB - Texture设置成功\"+\"\\n\");\n        }\n}\n\n////////////设置格式为Raw  忽略规则  Alpha为亮度///////////////\nproc BRaw(){\n        string $Rawsel[] = `ls -sl`;\n        for($i=0; $i<`size($Rawsel)`; $i++){\n           setAttr  -type \"string\" ($Rawsel[$i] + \".colorSpace\")\"Raw\"; \n           setAttr ($Rawsel[$i]+ \".ignoreColorSpaceFileRules\") 1;\n           setAttr ($Rawsel[$i]+ \".alphaIsLuminance\") 1;\n           print (\"  Utility - Raw  设置成功\"+\"\\n\");\n       }\n}\n\n////////////设置格式为 Utility - sRGB - Texture 忽略规则///////////////\nproc BUsRGB(){\n        string $Usrgbsel[] = `ls -sl`;\n        for($i=0; $i<`size($Usrgbsel)`; $i++)\n        {\n           setAttr  -type \"string\" ($Usrgbsel[$i] + \".colorSpace\")\"Utility - sRGB - Texture\"; \n           setAttr ($Usrgbsel[$i]+ \".ignoreColorSpaceFileRules\") 1;\n           print (\"  Utility - sRGB - Texture设置成功\"+\"\\n\");\n        }\n}\n\n////////////设置格式为 Utility - RAW 忽略规则 Alpha为亮度///////////////\nproc BUraw(){\n        string $URAWsel[] = `ls -sl`;\n        for($i=0; $i<`size($URAWsel)`; $i++){\n           setAttr  -type \"string\" ($URAWsel[$i] + \".colorSpace\")\"Utility - Raw\"; \n           setAttr ($URAWsel[$i]+ \".ignoreColorSpaceFileRules\") 1;\n           setAttr ($URAWsel[$i]+ \".alphaIsLuminance\") 1;\n           print (\"  Utility - Raw  设置成功\"+\"\\n\");\n        }\n}\n\n//批量连接2dTexture到贴图File节点，先选择2dTexture，后选择贴图节点（可支持rs法线贴图连接）//\nproc B2dtex(){\nstring $Nsel[] = `ls -sl`;\nstring $NTile = ($Nsel[0]+\".repeatUV\");\nselect -d $Nsel[0];\nstring $sel[] = `ls -sl`;\nfor($i=0;$i<`size($sel)`;$i++)\n{\n    if(`objectType $sel[$i]`==\"file\")\n    {\n        connectAttr -force ($Nsel[0]+\".coverage\") ($sel[$i]+\".coverage\");\n        connectAttr -force ($Nsel[0]+\".mirrorU\") ($sel[$i]+\".mirrorU\");\n        connectAttr -force ($Nsel[0]+\".mirrorV\") ($sel[$i]+\".mirrorV\");\n        connectAttr -force ($Nsel[0]+\".noiseUV\") ($sel[$i]+\".noiseUV\");\n        connectAttr -force ($Nsel[0]+\".offset\") ($sel[$i]+\".offset\");\n        connectAttr -force ($Nsel[0]+\".uvFilterSize\") ($sel[$i]+\".uvFilterSize\");\n        connectAttr -force ($Nsel[0]+\".repeatUV\") ($sel[$i]+\".repeatUV\");\n        connectAttr -force ($Nsel[0]+\".rotateFrame\") ($sel[$i]+\".rotateFrame\");\n        connectAttr -force ($Nsel[0]+\".rotateUV\") ($sel[$i]+\".rotateUV\");\n        connectAttr -force ($Nsel[0]+\".stagger\") ($sel[$i]+\".stagger\");\n        connectAttr -force ($Nsel[0]+\".translateFrame\") ($sel[$i]+\".translateFrame\");\n        connectAttr -force ($Nsel[0]+\".vertexCameraOne\") ($sel[$i]+\".vertexCameraOne\");\n        connectAttr -force ($Nsel[0]+\".vertexUvOne\") ($sel[$i]+\".vertexUvOne\");\n        connectAttr -force ($Nsel[0]+\".vertexUvThree\") ($sel[$i]+\".vertexUvThree\");\n        connectAttr -force ($Nsel[0]+\".vertexUvTwo\") ($sel[$i]+\".vertexUvTwo\");\n        connectAttr -force ($Nsel[0]+\".wrapU\") ($sel[$i]+\".wrapU\");\n        connectAttr -force ($Nsel[0]+\".wrapV\") ($sel[$i]+\".wrapV\");\n        connectAttr -force ($Nsel[0]+\".outUV\") ($sel[$i]+\".uvCoord\");\n    }\n    else if(`objectType $sel[$i]`==\"RedshiftNormalMap\")\n    {\n        connectAttr -f $NTile ($sel[$i]+\".repeats\");\n    }\n}    \n}\n\n///////////////////主要窗口//////////////////\nstring $WindowMapColor = \"WindowMapColor\";\n\nif (`window -ex $WindowMapColor`)\n{\n    deleteUI -window $WindowMapColor;\n}\n\nstring $windowtex = `window -title \"三岁豆Er\"\n       -sizeable 0\n       $WindowMapColor`;\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 230;\n       text  -h 50  -label\"贴图设置工具\";\n       button -label \"忽略所有贴图色彩空间规则\" -bgc 0.2 0.8 0.9 -c \"Ignoreall()\";\n       button -label \"2dTexture\" -c \"B2dtex()\";\n       button -label \"保留边和角\" -c \"OpenSubdivT()\";\n       button -label \"sRGB\" -c \"BsRGB()\";\n       button -label \"Raw\" -c \"BRaw()\";\n       button -label \"Utility - sRGB\"  -c  \"BUsRGB()\";\n       button -label \"Utility - Raw\"  -c  \"BUraw()\";\n       text  -h 5 -label\"\";\nsetParent ..;\nshowWindow $WindowMapColor;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "灯光管理工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "灯光管理工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "lightList.svg" 
        -image1 "lightList.svg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Vray 灯光管理工具//\n// 作者：三岁豆 , 创建日期 2023.05.28 //\n\n//判断窗口Window是否存在//\n\n/// 断开默认灯光链接\nproc DefaultLightLink(string $mode){ \n    string $SelLight[] = `ls -transforms  -sl -dag `;\n    for($light in $SelLight){\n    if($mode==\"Break\"){\n                 disconnectAttr -nextAvailable ($light  + \".instObjGroups[0]\")  defaultLightSet.dagSetMembers;\n                print( $light +\" 默认灯光链接已断开 \"+ \"\\n\"); \n                }\n    }\n }\n\nproc Invisible()\n{\n    string $sel[0] = `ls -sl -dag -type shape`; //$sel=选择的物体，-dag 组内对象生效\n    for ($one in $sel) //对$sel中所有执行\n    if(`objExists ($one+\".invisible\")`)\n{setAttr ($one+\".invisible\") 1;}\n\nprint $sel\"已关闭可见性！；\\n\";\n}\n\nstring $WindowLing = \"WindowLing\";\nif (`window -ex $WindowLing`)\n{\n    deleteUI -window $WindowLing;\n}\n\nstring $windowlin = `window -title \"三岁豆Er\"\n       -sizeable 0 \n       $WindowLing`;\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 230;\n      text  -h 50  -label\"Vray 灯光管理工具\";\n       button -label \"断开Vray默认\" -bgc 0.4  1.0 1.0-c  \"DefaultLightLink(\\\"Break\\\")\";\n       button -label \"灯光可见性\" -bgc 1.0 1.0 0.2 -c  \"Invisible\";\n       button -label \"生成灯光链接\"  -c  \"MakeLightLinks\";\n       button -label \"断开灯光链接\" -c \"BreakLightLinks\";\n       button -label \"选择照明对象的灯光\" -c \"SelectLightsIlluminatingObject\";\n       button -label \"选择灯光照明的对象\" -c \"SelectObjectsIlluminatedByLight\";\n       text  -h 5 -label\"\";\nsetParent ..;\nshowWindow $WindowLing;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Vray代理设置工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Vray代理设置工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "volumeSphere.png" 
        -image1 "volumeSphere.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Vray 代理批量设置工具//\n// 作者：三岁豆 , 创建日期 2023.11.02  V 1.0//\nproc rayproxy0(){\n    string $sel[0] = `ls -sl -dag -type shape`; //$sel=选择的物体，-dag 组内对象生效\n    for ($one in $sel) //对$sel中所有执行\n        if(`objExists ($one+\".geomType\")`)\n        {setAttr ($one+\".geomType\") 0;}\n        print $sel\" 设置None成功！ \\n\";\n}\n\nproc rayproxy1(){\n    string $sel[0] = `ls -sl -dag -type shape`; //$sel=选择的物体，-dag 组内对象生效\n    for ($one in $sel) //对$sel中所有执行\n        if(`objExists ($one+\".geomType\")`)\n        {setAttr ($one+\".geomType\") 1;}\n        print $sel\" 设置 Bounding boxes 成功！ \\n\";\n}\n\nproc rayproxy2(){\n    string $sel[0] = `ls -sl -dag -type shape`; //$sel=选择的物体，-dag 组内对象生效\n    for ($one in $sel) //对$sel中所有执行\n        if(`objExists ($one+\".geomType\")`)\n        {setAttr ($one+\".geomType\") 2;}\n        print $sel\" 设置 Preview geometry 成功！ \\n\";\n}\n\nproc rayproxy3(){\n    string $sel[0] = `ls -sl -dag -type shape`; //$sel=选择的物体，-dag 组内对象生效\n    for ($one in $sel) //对$sel中所有执行\n        if(`objExists ($one+\".geomType\")`)\n        {setAttr ($one+\".geomType\") 3;}\n        print $sel\" 设置 Full geometry 成功！ \\n\";\n}\n\n\nstring $WindowPorxyz = \"WindowPorxyz\";\nif (`window -ex $WindowPorxyz`)\n{\n    deleteUI -window $WindowPorxyz;\n}\n\nstring $WindowPorxy = `window -title \"三岁豆Er\"\n       -sizeable 0 \n       $WindowPorxyz`;\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 230;\n      text  -h 50  -label\"Vray 代理批量设置工具\";\n       button -label \"导入代理\" -c \"vrayCreateImportProxyWindow\";\n       button -label \"导出代理\" -c \"vrayCreateCreateProxyWindow;\";\n       button -label \"None\"  -c  \"rayproxy0\";\n       button -label \"Bounding boxes\" -c \"rayproxy1\";\n       button -label \"Preview geometry\" -c \"rayproxy2\";\n       button -label \"Full geometry\" -c \"rayproxy3\";\n       text  -h 5 -label\"\";\nsetParent ..;\nshowWindow $WindowPorxyz;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "反向Smooth工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "反向Smooth工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "SmoothTarget.png" 
        -image1 "SmoothTarget.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\n\ndef smoothReduce():\n    sel=cmds.ls(sl=True)\n    if sel:\n        pointNum=cmds.polyEvaluate(v=True)\n        vertexId = sel[0]+'.vtx[{}]'.format(str(pointNum))\n        lastEdgeGroup=cmds.polyListComponentConversion(vertexId,fv=True,te=True)[0]\n        cmds.select(lastEdgeGroup)\n\n        while 1:\n            calcu = cmds.ls(sl=True)\n            cmds.SelectEdgeLoopSp()\n            edge = cmds.ls(sl=True,fl=True)\n            edges = [int(ii.split('[')[1].split(']')[0]) for ii in edge]\n            cmds.polySelect(er=edges,en=2)\n            pp = cmds.ls(sl=True)\n            if pp == calcu:\n                break\n        cmds.polyDelEdge( cv=True )\n    else:\n        cmds.warning('not selected!')\n\nif cmds.window(\"WSmooths\", exists=True):\n\t cmds.deleteUI(\"WSmooths\", window=True)\n\nsizeX = 280\n\nWSmooth = cmds.window( \"WSmooths\",title=\"三岁豆Er\", iconName='Short Name', widthHeight=(sizeX, 150),mnb = True, mxb = False, sizeable = False )\ncmds.columnLayout( columnAttach=('both', 10), rowSpacing=10, columnWidth=sizeX )\ncmds.text(l='',h=20)\ncmds.text(fn=\"plainLabelFont\",l='选择需要反向smooth的模型')\ncmds.text(fn=\"plainLabelFont\",l='记得删历史')\ncmds.text(l='',h=5)\ncmds.button(l=\"反向Smooth\",c=\"smoothReduce()\",h=40,w=10 )\ncmds.setParent( '..' )\ncmds.showWindow( WSmooth )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "一键搞定重命的节点" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "搞定重命的节点" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "tacks.png" 
        -image1 "tacks.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//去掉母代名称,例如\"a|ab|abc\"会得到\"abc\"//\nglobal proc string lastName_pro(string $name1)\n{\n    if(`gmatch $name1 \"*|*\"`)\n    {\n        $name1 = `match \"|.*\" $name1`;\n        $name1 = `substring $name1 2 (size($name1))`;\n        $name1 = `lastName_pro $name1`;\n    }\n    return $name1;\n}\n\n//去掉名称后面的数字,例如\"abc01\"会得到\"abc\",\"01\"//\nglobal proc string[] endCharName_pro(string $str1[])\n{\n    string $lastChar = endString($str1[0], 1);\n    if(`gmatch $lastChar \"[0-9]\"`)\n    {\n        $str1[0] = `substring $str1[0] 1 (size($str1[0])-1)`;\n        $str1[1] = $lastChar + $str1[1];\n        $str1 = `endCharName_pro $str1`;\n    }\n    return $str1;\n}\n\n\n//在数组内查找名称最高版本号,前提是数组内有元素匹配$str\n//例如有数组$array={\"abc1,abc2,abc5,abcd1,abcde2,abcdef3\"};\n//int $max = size($array)-1;\n//输入findMax_pro($array,\"abc\",0,$max),会得到\"abc5\"\nglobal proc string findMax_pro(string $array[],string $str,int $min,int $max)\n{\n    int $middle = ($max-$min)/2+$min;\n    $array[$middle] = lastName_pro($array[$middle]);\n    string $tempStrs[] = endCharName_pro({$array[$middle]});\n    if($middle!=$min)\n    {\n        if($str==$tempStrs[0])\n            $min = $middle;\n        else\n            $max = $middle;\n        $tempStrs[0] = findMax_pro($array,$str,$min,$max);\n    }\n    else\n    {\n        $array[$max] = lastName_pro($array[$max]);\n        $tempStrs = endCharName_pro({$array[$max]});\n        if($str==$tempStrs[0])\n            $tempStrs[0] = $array[$max];\n        else\n            $tempStrs[0] = $array[$middle];\n    }\n    return $tempStrs[0];\n}\n\n\n//获取该物体名字在场景内最大版本号+1\nglobal proc string getObjMaxVersion_pro(string $objName)\n{\n    $objName = lastName_pro($objName);\n    string $tempStrs[] = endCharName_pro({$objName});\n    string $array[] = `ls ($tempStrs[0] + \"*\")`;\n    if(size($array))\n    {\n        $objName = findMax_pro($array,$tempStrs[0],0,(size($array)-1));\n        $tempStrs = endCharName_pro({$objName});\n    }\n    $objName = $tempStrs[0] + (int($tempStrs[1])+1);\n    return $objName;\n}\n\n\n//根据母代名称的多少来排序,例如\"a|ab|abc\"会相对排在前面,\"a|ab\"会相对排在后面//\nglobal proc string[] sortName_pro(string $allName[])\n{\n    int $i,$j,$temp_num,$numTokens1,$numTokens2;\n    string $temp_name,$buffer[];\n    for($i=0;$i<size($allName);$i++)\n    {\n        $numTokens1 = `tokenize $allName[$i] \"|\" $buffer`;\n        for($j=0;$j<size($allName);$j++)\n        {\n            $numTokens2 = `tokenize $allName[$j] \"|\" $buffer`;\n            if($numTokens1>$numTokens2)\n            {\n                $temp_num = $numTokens1; $numTokens1 = $numTokens2; $numTokens2 = $temp_num;\n                $temp_name = $allName[$i]; $allName[$i] = $allName[$j]; $allName[$j] = $temp_name;\n            }\n        }\n    }\n    return $allName;\n}\n\n\nglobal proc string rejiggerName_pro(string $allName[],string $nameType,int $amount)\n{\n    string $againName[];\n    int $j=0;\n    for($i=0;$i<size($allName);$i++)\n    {\n        if(`gmatch $allName[$i] \"*|*\"`)\n        {\n            $againName[$j] = $allName[$i];\n            $j++;\n        }\n        $amount += 3.0*$i/size($allName);\n        progressWindow -edit\n            -progress $amount\n            -status (\"====正在检测并且重新命名场景内所有的重名物体和节点: \"+$amount+\"%====\");\n    }\n    if(!$j)\n    {\n        $amount += 30;\n        progressWindow -edit\n                -progress $amount\n                -status (\"====正在检测并且重新命名场景内所有的重名物体和节点: \"+$amount+\"%====\");\n        return \"\";\n    }\n\n    $againName = `sortName_pro $againName`;\n\n    string $temp_name;\n    string $failNames[],$loseName[],$str1[];\n    int $k=0,$l=0;\n    for($i=0;$i<size($againName);$i++)\n    {\n        if ( `progressWindow -query -isCancelled` )\n        {\n            break;\n            return \"\";\n        }\n        if(`gmatch $againName[$i] \"*|*\"`)\n        {\n            $againName[$i] = longNameOf($againName[$i]);\n            if($nameType==\"Shape节点\")\n            {\n                $temp_name = firstParentOf($againName[$i]);\n                $temp_name = `lastName_pro $temp_name`;\n                $str1 = `endCharName_pro {$temp_name}`;\n                $temp_name = $str1[0] + \"Shape\\#\";\n            }\n            else\n            {\n                $temp_name = `lastName_pro $againName[$i]`;\n                $str1 = `endCharName_pro {$temp_name}`;\n                $temp_name = $str1[0] + \"\\#\";\n            }\n\n            if(catchQuiet($temp_name=`rename $againName[$i] $temp_name`))\n            {\n                $failNames[$k] = $againName[$i];\n                $k++;\n            }\n            else\n            {\n                if(`gmatch $temp_name \"*|*\"`)\n                {\n                    $loseName[$l] = longNameOf($temp_name);\n                    $l++;\n                }\n            }\n            $amount += 10.0*$i/size($againName);\n            progressWindow -edit\n                -progress $amount\n                -status (\"====正在检测并且重新命名场景内所有的重名物体和节点: \"+$amount+\"%====\");\n        }\n    }\n\n    if($l)\n    {\n        $l = 0;\n        for($i=0;$i<size($loseName);$i++)\n        {\n            $temp_name = getObjMaxVersion_pro($loseName[$i]);\n            catchQuiet($loseName[$i]=`rename $loseName[$i] $temp_name`);\n            if(`gmatch $loseName[$i] \"*|*\"`)\n            {\n                $str1[$l] = $loseName[$i];\n                $l++;\n            }\n            $amount += 20.0*$i/size($loseName);\n            progressWindow -edit\n                -progress $amount\n                -status (\"====正在检测并且重新命名场景内所有的重名物体和节点: \"+$amount+\"%====\");\n        }\n    }\n\n    $temp_name = \"场景内共找到\" + $j + \"个重名的\" + $nameType + \"!\\n\";\n    $j = $j - $k;\n    if($j)\n    {\n        $temp_name = $temp_name + \"场景内\" + $j + \"个重名的\" + $nameType + \"已经全部重新更改名称!\\n\";\n    }\n    if($k)\n    {\n        $temp_name = $temp_name + \"场景内\" + $k + \"个重名的\" + $nameType + \"重新更改名称失败,请检查是否有reference物体或者被lockNode锁定的物体!\\n\";\n        print (\"场景内\" + $k + \"个重名的\" + $nameType + \",重新更改名称失败的物体为:\\n\");\n        print $failNames;\n    }\n    if($l)\n    {\n        $temp_name = $temp_name + \"场景内\" + $l + \"个重名的\" + $nameType + \",二次重新命名失败,请检查是否有关联物体或者共用相同shape节点的物体!\\n\";\n        print (\"场景内\" + $l + \"个重名的\" + $nameType + \",二次重新命名失败,请检查是否有关联或者共用相同shape节点的物体:\\n\");\n        print $str1;\n    }\n    return $temp_name;\n}\n\nglobal proc detectionOfTheSameNameMain()\n{\n    timer -s;\n    string $scripName = \"检测全部重名节点\";\n    int $amount = 0;\n    progressWindow\n        -title $scripName\n        -progress $amount\n        -status \"====正在检测并且重新命名场景内所有的重名物体和节点: 0%====\"\n        -isInterruptable true;\n\n    string $allName[] = `ls -tr`;\n    string $nameType = \"模型或者组\";\n    string $temp_name = `rejiggerName_pro $allName $nameType $amount`;\n\n    if ( !`progressWindow -query -isCancelled` )\n    {\n        $amount = 33;\n        $allName = `ls -s`;\n        $nameType = \"Shape节点\";\n        $temp_name = $temp_name + \"\\n\" + `rejiggerName_pro $allName $nameType $amount`;\n    }\n\n    if ( !`progressWindow -query -isCancelled` )\n    {\n        $amount = 67;\n        $allName = `ls`;\n        //string $items[] = `ls -tr`;\n        //$allName = stringArrayRemove($items, $allName);\n        //$items = `ls -s`;\n        //$allName = stringArrayRemove($items, $allName);\n        $nameType = \"其它节点\";\n        $temp_name = $temp_name + \"\\n\" + `rejiggerName_pro $allName $nameType $amount`;\n    }\n    else\n        $temp_name = \"程序已经被终止运行.\";\n\n    if($temp_name==\"\\n\\n\")\n        $temp_name = \"GOOD!,场景内没有找到任何重名的物体和节点.\";\n\n    progressWindow -endProgress;\n    print(\"此次运行时间为:\"+`timer -e`+\"秒.\\n\");\n\n    confirmDialog -title $scripName -message $temp_name\n        -button \"谢谢使用\" -defaultButton \"谢谢使用\"\n        -cancelButton \"谢谢使用\" -dismissString \"谢谢使用\";\n}\nglobal proc deleteUknownNodes()\n{\n\tstring $unknownNodes[]=`ls -et \"unknown\"`;\n\tfor($nodes in $unknownNodes)\n\t\tdelete $nodes;\n\tprint (\"delete \"+size($unknownNodes)+\" unknown nodes\");\n} \ndeleteUknownNodes();\n\ndetectionOfTheSameNameMain();" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 0
        -flexibleWidthType 1
        -flexibleWidthValue 32
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "UV集检查修改工具" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "UV集检查修改工具" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "UVTkUV.png" 
        -image1 "UVTkUV.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//UV集检查修改工具//\n// 作者：三岁豆 , 创建日期 2024.01.13  V 1.0//\n\n// 创建窗口 判断UVToolWindow是否存在\nif (`window -exists uvToolWindow`) \n    deleteUI uvToolWindow;\nwindow -title \"三岁豆Er\" \n-sizeable false\nuvToolWindow;\n\n// 窗口布局\ncolumnLayout  -columnAttach \"both\" 10 -rowSpacing 5 -columnWidth 230;\nint $buttonHeight = 30;\n\n\n//窗口内容\ntext -h 50 -label \"UV集检查修改工具\";\nbutton -label \"选中具有多个UV集的模型\" -height $buttonHeight -command \"selectMultipleUVSetsModels\";\nbutton -label \"选中UV集不为map1的模型\" -height $buttonHeight -command \"selectNonDefaultUVModels\";\nbutton -label \"删除多余的UV集\" -height $buttonHeight -command \"deleteExtraUVSets\";\nbutton -label \"重命名默认UV集为map1\" -height $buttonHeight -command \"renameFirstUVSetToMap1\";\ntext  -h 5 -label\"\";\n\n//显示窗口\nshowWindow uvToolWindow;\n\n\n\n// 选中具有多个UV集的对象\nglobal proc selectMultipleUVSetsModels() {\n    select -cl;\n    string $allModels[] = `ls -g`;\n    string $model;\n    int $foundModels = 0;\n\n    for ($model in $allModels) {\n        string $uvSets[] = `polyUVSet -q -allUVSets $model`;\n        if (size($uvSets) > 1) {\n            select -add $model;\n            $foundModels++;\n        }\n    }\n\n    if ($foundModels == 0) {\n        confirmDialog -title \"提示\" -message \"\\n在当前场景中未找到具有多个UV集的模型!\\n\" -button \"确定\" -defaultButton \"确定\";\n    }\n}\n\n\n\n// 选中UV集不为map1的模型\nglobal proc selectNonDefaultUVModels() {\n    select -cl;\n    string $allModels[] = `ls -g`;\n    string $model;\n    int $foundModels = 0;\n\n    for ($model in $allModels) {\n        string $currentUVSets[] = `polyUVSet -q -currentUVSet $model`;\n        if (size($currentUVSets) > 0 && $currentUVSets[0] != \"map1\") {\n            select -add $model;\n            $foundModels++;\n        }\n    }\n\n    if ($foundModels == 0) {\n        confirmDialog \n        -title \"提示\" \n        -message \"\\n在当前场景中未找到默认UV集名称非 map1 的模型！\\n\" \n        -button \"确定\" \n        -defaultButton \"确定\";\n    }\n}\n\n\n\n\n// 删除多余的UV集\nglobal proc deleteExtraUVSets() {\n    string $selectedModels[] = `ls -sl -dag -ni -type mesh`;\n    if(size($selectedModels) == 0){\n            confirmDialog \n            -title \"提示\" \n            -message \"\\n您还没有选中模型或选中的不是多边形!\\n\" \n            -button \"确定\" \n            -defaultButton \"确定\";\n        return;\n    }\n\n    string $model;\n    for ($model in $selectedModels) {\n        string $uvSets[] = `polyUVSet -q -allUVSets $model`;\n\n        if(size($uvSets) <= 1) {\n            confirmDialog \n            -title \"提示\" \n            -message \"\\n您当前选中的模型仅有一个UV集\\n\" \n            -button \"确定\" \n            -defaultButton \"确定\";\n            continue;\n        }\n\n        string $uvSet;\n        for ($uvSet in $uvSets) {\n            if ($uvSet != \"map1\") {\n                print (\"正在删除 \" + $model + \" 的UV集:\" + $uvSet + \"\\n\");\n                polyUVSet -delete -uvSet $uvSet $model;\n            }\n        }\n    }\n    print \"三岁豆Er:删除多余UV集成功!\\n\";\n}\n\n\n\n// 重命名默认UV集为map1\nglobal proc renameFirstUVSetToMap1() {\n    string $selectedObjects[] = `ls -sl -dag -ni -type mesh`;\n    if(size($selectedObjects) == 0){\n        confirmDialog \n        -title \"提示\" \n        -message \"\\n您还没有选中模型或选中的不是多边形!\\n\" \n        -button \"确定\" \n        -defaultButton \"确定\";\n        return;\n    }\n\n    string $object;\n    for ($object in $selectedObjects) {\n        string $uvSets[] = `polyUVSet -q -allUVSets $object`;\n        if (size($uvSets) > 0) {\n            string $firstUVSet = $uvSets[0];\n            if ($firstUVSet != \"map1\") {\n                polyUVSet -rename -newUVSet \"map1\" -uvSet $firstUVSet $object;\n                print (\"已将 \" + $object + \" 的默认UV集重命名为 'map1'\\n\");\n            } else {\n                print ($object + \" 的第一个 UV 集已经是 'map1'。\\n\");\n            }\n        } else {\n            print ($object + \" 没有 UV 集。\\n\");\n        }\n    }\n    print \"三岁豆Er!重命名默认UV集成功!\\n\";\n}" 
        -sourceType "mel" 
        -commandRepeatable 0
        -flat 1
    ;

} 
